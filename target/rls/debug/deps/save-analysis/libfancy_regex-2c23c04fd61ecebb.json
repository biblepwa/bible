{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1","program":"/home/john/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","fancy_regex","--edition=2018","/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=3","-C","linker-plugin-lto","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=2c23c04fd61ecebb","-C","extra-filename=-2c23c04fd61ecebb","--out-dir","/home/john/code/Bible/Bible_kjv/target/rls/debug/deps","-L","dependency=/home/john/code/Bible/Bible_kjv/target/rls/debug/deps","--extern","bit_set=/home/john/code/Bible/Bible_kjv/target/rls/debug/deps/libbit_set-dd80a205d60faa5c.rmeta","--extern","regex=/home/john/code/Bible/Bible_kjv/target/rls/debug/deps/libregex-a3c139252ab0e927.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/john/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/john/code/Bible/Bible_kjv/target/rls/debug/deps/libfancy_regex-2c23c04fd61ecebb.rmeta"},"prelude":{"crate_id":{"name":"fancy_regex","disambiguator":[680458919637360992,0]},"crate_root":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src","external_crates":[{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12183244430281887400,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8357241026203332200,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12366212805520858122,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16942624007396114565,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9146905573849924534,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3984974423095474310,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17062249482329071005,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9650074992516280531,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[11294981568525771845,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2937232846550133502,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[916118139006228645,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10588692737450637690,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[6136648393888539129,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[12981437011810194475,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[148412131477461657,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[9709332217955803794,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[10989117992165357727,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2143393700537892828,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[11382580725447476280,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/analyze.rs","num":20,"id":{"name":"bit_set","disambiguator":[9860983569139846887,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/analyze.rs","num":21,"id":{"name":"bit_vec","disambiguator":[18140002464627818256,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/parse.rs","num":22,"id":{"name":"regex","disambiguator":[18326304756033478300,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/parse.rs","num":23,"id":{"name":"regex_syntax","disambiguator":[5864680791926402911,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/parse.rs","num":24,"id":{"name":"aho_corasick","disambiguator":[716569149044809842,0]}},{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/parse.rs","num":25,"id":{"name":"memchr","disambiguator":[2477001928749829701,0]}}],"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":1119,"byte_end":51961,"line_start":21,"line_end":1582,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":5075,"byte_end":5080,"line_start":168,"line_end":168,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":5082,"byte_end":5088,"line_start":168,"line_end":168,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":651},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":5114,"byte_end":5122,"line_start":169,"line_end":169,"column_start":24,"column_end":32},"alias_span":null,"name":"Expander","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":684},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":5150,"byte_end":5158,"line_start":170,"line_end":170,"column_start":27,"column_end":35},"alias_span":null,"name":"NoExpand","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":685},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":5150,"byte_end":5158,"line_start":170,"line_end":170,"column_start":27,"column_end":35},"alias_span":null,"name":"NoExpand","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":296},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":5160,"byte_end":5168,"line_start":170,"line_end":170,"column_start":37,"column_end":45},"alias_span":null,"name":"Replacer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":675},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":5170,"byte_end":5181,"line_start":170,"line_end":170,"column_start":47,"column_end":58},"alias_span":null,"name":"ReplacerRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":69},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":48400,"byte_end":48407,"line_start":1459,"line_end":1459,"column_start":29,"column_end":36},"alias_span":null,"name":"analyze","value":"","parent":{"krate":0,"index":567}},{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":48437,"byte_end":48444,"line_start":1460,"line_end":1460,"column_start":29,"column_end":36},"alias_span":null,"name":"compile","value":"","parent":{"krate":0,"index":567}},{"kind":"Use","ref_id":{"krate":0,"index":387},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":48470,"byte_end":48481,"line_start":1461,"line_end":1461,"column_start":25,"column_end":36},"alias_span":null,"name":"run_default","value":"","parent":{"krate":0,"index":567}},{"kind":"Use","ref_id":{"krate":0,"index":386},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":48483,"byte_end":48492,"line_start":1461,"line_end":1461,"column_start":38,"column_end":47},"alias_span":null,"name":"run_trace","value":"","parent":{"krate":0,"index":567}},{"kind":"Use","ref_id":{"krate":0,"index":694},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":48494,"byte_end":48498,"line_start":1461,"line_end":1461,"column_start":49,"column_end":53},"alias_span":null,"name":"Insn","value":"","parent":{"krate":0,"index":567}},{"kind":"Use","ref_id":{"krate":0,"index":765},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":48500,"byte_end":48504,"line_start":1461,"line_end":1461,"column_start":55,"column_end":59},"alias_span":null,"name":"Prog","value":"","parent":{"krate":0,"index":567}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":1119,"byte_end":51961,"line_start":21,"line_end":1582,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":71},{"krate":0,"index":148},{"krate":0,"index":157},{"krate":0,"index":219},{"krate":0,"index":289},{"krate":0,"index":334},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":801},{"krate":0,"index":803},{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":823},{"krate":0,"index":827},{"krate":0,"index":834},{"krate":0,"index":432},{"krate":0,"index":437},{"krate":0,"index":838},{"krate":0,"index":843},{"krate":0,"index":442},{"krate":0,"index":447},{"krate":0,"index":847},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":870},{"krate":0,"index":874},{"krate":0,"index":879},{"krate":0,"index":881},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":502},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":525},{"krate":0,"index":531},{"krate":0,"index":539},{"krate":0,"index":883},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":544},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567}],"decl_id":null,"docs":"An implementation of regexes, supporting a relatively rich set of features, including backreferences\nand lookaround.","sig":null,"attributes":[{"value":"*\nAn implementation of regexes, supporting a relatively rich set of features, including backreferences\nand lookaround.\n\nIt builds on top of the excellent [regex] crate. If you are not\nfamiliar with it, make sure you read its documentation and maybe you don't even need fancy-regex.\n\nIf your regex or parts of it does not use any special features, the matching is delegated to the\nregex crate. That means it has linear runtime. But if you use \"fancy\" features such as\nbackreferences or look-around, an engine with backtracking needs to be used. In that case, the regex\ncan be slow and take exponential time to run because of what is called \"catastrophic backtracking\".\nThis depends on the regex and the input.\n\n# Usage\n\nThe API should feel very similar to the regex crate, and involves compiling a regex and then using\nit to find matches in text.\n\n## Example: Matching text\n\nAn example with backreferences to check if a text consists of two identical words:\n\n```rust\nuse fancy_regex::Regex;\n\nlet re = Regex::new(r\"^(\\w+) (\\1)$\").unwrap();\nlet result = re.is_match(\"foo foo\");\n\nassert!(result.is_ok());\nlet did_match = result.unwrap();\nassert!(did_match);\n```\n\nNote that like in the regex crate, the regex needs anchors like `^` and `$` to match against the\nentire input text.\n\n## Example: Finding the position of matches\n\n```rust\nuse fancy_regex::Regex;\n\nlet re = Regex::new(r\"(\\d)\\1\").unwrap();\nlet result = re.find(\"foo 22\");\n\nassert!(result.is_ok(), \"execution was successful\");\nlet match_option = result.unwrap();\n\nassert!(match_option.is_some(), \"found a match\");\nlet m = match_option.unwrap();\n\nassert_eq!(m.start(), 4);\nassert_eq!(m.end(), 6);\nassert_eq!(m.as_str(), \"22\");\n```\n\n## Example: Capturing groups\n\n```rust\nuse fancy_regex::Regex;\n\nlet re = Regex::new(r\"(?<!AU)\\$(\\d+)\").unwrap();\nlet result = re.captures(\"AU$10, $20\");\n\nlet captures = result.expect(\"Error running regex\").expect(\"No match found\");\nlet group = captures.get(1).expect(\"No group\");\nassert_eq!(group.as_str(), \"20\");\n```\n\n# Syntax\n\nThe regex syntax is based on the [regex] crate's, with some additional supported syntax.\n\nEscapes:\n\n`\\h`\n: hex digit (`[0-9A-Fa-f]`) \\\n`\\H`\n: not hex digit (`[^0-9A-Fa-f]`) \\\n`\\e`\n: escape control character (`\\x1B`)\n\nBackreferences:\n\n`\\1`\n: match the exact string that the first capture group matched \\\n`\\2`\n: backref to the second capture group, etc\n\nNamed capture groups:\n\n`(?<name>exp)`\n: match *exp*, creating capture group named *name* \\\n`\\k<name>`\n: match the exact string that the capture group named *name* matched \\\n`(?P<name>exp)`\n: same as `(?<name>exp)` for compatibility with Python, etc. \\\n`(?P=name)`\n: same as `\\k<name>` for compatibility with Python, etc.\n\nLook-around assertions for matching without changing the current position:\n\n`(?=exp)`\n: look-ahead, succeeds if *exp* matches to the right of the current position \\\n`(?!exp)`\n: negative look-ahead, succeeds if *exp* doesn't match to the right \\\n`(?<=exp)`\n: look-behind, succeeds if *exp* matches to the left of the current position \\\n`(?<!exp)`\n: negative look-behind, succeeds if *exp* doesn't match to the left\n\nAtomic groups using `(?>exp)` to prevent backtracking within `exp`, e.g.:\n\n```\n# use fancy_regex::Regex;\nlet re = Regex::new(r\"^a(?>bc|b)c$\").unwrap();\nassert!(re.is_match(\"abcc\").unwrap());\n// Doesn't match because `|b` is never tried because of the atomic group\nassert!(!re.is_match(\"abc\").unwrap());\n```\n\n[regex]: https://crates.io/crates/regex\n*/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":1119,"byte_end":4573,"line_start":21,"line_end":142,"column_start":1,"column_end":3}},{"value":"deny(missing_docs)","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":4636,"byte_end":4658,"line_start":145,"line_end":145,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":4659,"byte_end":4698,"line_start":146,"line_end":146,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":587},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/analyze.rs","byte_start":53301,"byte_end":53305,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"Info","qualname":"::analyze::Info","value":"Info {  }","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/analyze.rs","byte_start":59877,"byte_end":59884,"line_start":211,"line_end":211,"column_start":8,"column_end":15},"name":"analyze","qualname":"::analyze::analyze","value":"pub fn analyze<'a>(&'a ExprTree) -> Result<Info>","parent":null,"children":[],"decl_id":null,"docs":" Analyze the parsed expression to determine whether it requires fancy features.\n","sig":null,"attributes":[{"value":"/ Analyze the parsed expression to determine whether it requires fancy features.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/analyze.rs","byte_start":59787,"byte_end":59869,"line_start":210,"line_end":210,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":136},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/compile.rs","byte_start":76666,"byte_end":76673,"line_start":451,"line_end":451,"column_start":8,"column_end":15},"name":"compile","qualname":"::compile::compile","value":"pub fn compile(&Info) -> Result<Prog>","parent":null,"children":[],"decl_id":null,"docs":" Compile the analyzed expressions into a program.\n","sig":null,"attributes":[{"value":"/ Compile the analyzed expressions into a program.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/compile.rs","byte_start":76606,"byte_end":76658,"line_start":450,"line_end":450,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":152},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":83661,"byte_end":83667,"line_start":4,"line_end":4,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type for this crate with specific error enum.\n","sig":null,"attributes":[{"value":"/ Result type for this crate with specific error enum.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":83595,"byte_end":83651,"line_start":3,"line_end":3,"column_start":1,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":601},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":83863,"byte_end":83873,"line_start":11,"line_end":11,"column_start":5,"column_end":15},"name":"ParseError","qualname":"::error::Error::ParseError","value":"Error::ParseError","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" General parsing error\n","sig":null,"attributes":[{"value":"/ General parsing error","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":83833,"byte_end":83858,"line_start":10,"line_end":10,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":603},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":83948,"byte_end":83965,"line_start":13,"line_end":13,"column_start":5,"column_end":22},"name":"UnclosedOpenParen","qualname":"::error::Error::UnclosedOpenParen","value":"Error::UnclosedOpenParen","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Opening parenthesis without closing parenthesis, e.g. `(a|b`\n","sig":null,"attributes":[{"value":"/ Opening parenthesis without closing parenthesis, e.g. `(a|b`","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":83879,"byte_end":83943,"line_start":12,"line_end":12,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":605},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84001,"byte_end":84014,"line_start":15,"line_end":15,"column_start":5,"column_end":18},"name":"InvalidRepeat","qualname":"::error::Error::InvalidRepeat","value":"Error::InvalidRepeat","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Invalid repeat syntax\n","sig":null,"attributes":[{"value":"/ Invalid repeat syntax","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":83971,"byte_end":83996,"line_start":14,"line_end":14,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":607},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84054,"byte_end":84071,"line_start":17,"line_end":17,"column_start":5,"column_end":22},"name":"RecursionExceeded","qualname":"::error::Error::RecursionExceeded","value":"Error::RecursionExceeded","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Pattern too deeply nested\n","sig":null,"attributes":[{"value":"/ Pattern too deeply nested","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84020,"byte_end":84049,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":609},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84129,"byte_end":84147,"line_start":19,"line_end":19,"column_start":5,"column_end":23},"name":"LookBehindNotConst","qualname":"::error::Error::LookBehindNotConst","value":"Error::LookBehindNotConst","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Look-behind assertion without constant size\n","sig":null,"attributes":[{"value":"/ Look-behind assertion without constant size","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84077,"byte_end":84124,"line_start":18,"line_end":18,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":611},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84199,"byte_end":84216,"line_start":21,"line_end":21,"column_start":5,"column_end":22},"name":"TrailingBackslash","qualname":"::error::Error::TrailingBackslash","value":"Error::TrailingBackslash","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Backslash without following character\n","sig":null,"attributes":[{"value":"/ Backslash without following character","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84153,"byte_end":84194,"line_start":20,"line_end":20,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":613},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84245,"byte_end":84258,"line_start":23,"line_end":23,"column_start":5,"column_end":18},"name":"InvalidEscape","qualname":"::error::Error::InvalidEscape","value":"Error::InvalidEscape(String)","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Invalid escape\n","sig":null,"attributes":[{"value":"/ Invalid escape","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84222,"byte_end":84240,"line_start":22,"line_end":22,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":616},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84306,"byte_end":84325,"line_start":25,"line_end":25,"column_start":5,"column_end":24},"name":"UnclosedUnicodeName","qualname":"::error::Error::UnclosedUnicodeName","value":"Error::UnclosedUnicodeName","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Unicode escape not closed\n","sig":null,"attributes":[{"value":"/ Unicode escape not closed","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84272,"byte_end":84301,"line_start":24,"line_end":24,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":618},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84358,"byte_end":84368,"line_start":27,"line_end":27,"column_start":5,"column_end":15},"name":"InvalidHex","qualname":"::error::Error::InvalidHex","value":"Error::InvalidHex","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Invalid hex escape\n","sig":null,"attributes":[{"value":"/ Invalid hex escape","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84331,"byte_end":84353,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":620},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84426,"byte_end":84447,"line_start":29,"line_end":29,"column_start":5,"column_end":26},"name":"InvalidCodepointValue","qualname":"::error::Error::InvalidCodepointValue","value":"Error::InvalidCodepointValue","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Invalid codepoint for hex or unicode escape\n","sig":null,"attributes":[{"value":"/ Invalid codepoint for hex or unicode escape","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84374,"byte_end":84421,"line_start":28,"line_end":28,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":622},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84485,"byte_end":84497,"line_start":31,"line_end":31,"column_start":5,"column_end":17},"name":"InvalidClass","qualname":"::error::Error::InvalidClass","value":"Error::InvalidClass","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Invalid character class\n","sig":null,"attributes":[{"value":"/ Invalid character class","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84453,"byte_end":84480,"line_start":30,"line_end":30,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":624},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84530,"byte_end":84541,"line_start":33,"line_end":33,"column_start":5,"column_end":16},"name":"UnknownFlag","qualname":"::error::Error::UnknownFlag","value":"Error::UnknownFlag(String)","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Unknown group flag\n","sig":null,"attributes":[{"value":"/ Unknown group flag","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84503,"byte_end":84525,"line_start":32,"line_end":32,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":627},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84595,"byte_end":84616,"line_start":35,"line_end":35,"column_start":5,"column_end":26},"name":"NonUnicodeUnsupported","qualname":"::error::Error::NonUnicodeUnsupported","value":"Error::NonUnicodeUnsupported","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Disabling Unicode not supported\n","sig":null,"attributes":[{"value":"/ Disabling Unicode not supported","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84555,"byte_end":84590,"line_start":34,"line_end":34,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":629},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84653,"byte_end":84667,"line_start":37,"line_end":37,"column_start":5,"column_end":19},"name":"InvalidBackref","qualname":"::error::Error::InvalidBackref","value":"Error::InvalidBackref","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Invalid back reference\n","sig":null,"attributes":[{"value":"/ Invalid back reference","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84622,"byte_end":84648,"line_start":36,"line_end":36,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":631},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84699,"byte_end":84709,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"InnerError","qualname":"::error::Error::InnerError","value":"Error::InnerError(regex::Error)","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Regex crate error\n","sig":null,"attributes":[{"value":"/ Regex crate error","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84673,"byte_end":84694,"line_start":38,"line_end":38,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":634},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84763,"byte_end":84779,"line_start":41,"line_end":41,"column_start":5,"column_end":21},"name":"InvalidGroupName","qualname":"::error::Error::InvalidGroupName","value":"Error::InvalidGroupName","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Couldn't parse group name\n","sig":null,"attributes":[{"value":"/ Couldn't parse group name","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84729,"byte_end":84758,"line_start":40,"line_end":40,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":636},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84829,"byte_end":84852,"line_start":43,"line_end":43,"column_start":5,"column_end":28},"name":"InvalidGroupNameBackref","qualname":"::error::Error::InvalidGroupNameBackref","value":"Error::InvalidGroupNameBackref(String)","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Invalid group id in escape sequence\n","sig":null,"attributes":[{"value":"/ Invalid group id in escape sequence","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84785,"byte_end":84824,"line_start":42,"line_end":42,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":639},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84938,"byte_end":84954,"line_start":45,"line_end":45,"column_start":5,"column_end":21},"name":"NamedBackrefOnly","qualname":"::error::Error::NamedBackrefOnly","value":"Error::NamedBackrefOnly","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Once named groups are used you cannot refer to groups by number\n","sig":null,"attributes":[{"value":"/ Once named groups are used you cannot refer to groups by number","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84866,"byte_end":84933,"line_start":44,"line_end":44,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":641},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":85024,"byte_end":85043,"line_start":48,"line_end":48,"column_start":5,"column_end":24},"name":"TargetNotRepeatable","qualname":"::error::Error::TargetNotRepeatable","value":"Error::TargetNotRepeatable","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Quantifier on lookaround or other zero-width assertion\n","sig":null,"attributes":[{"value":"/ Quantifier on lookaround or other zero-width assertion","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":84961,"byte_end":85019,"line_start":47,"line_end":47,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":643},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":85145,"byte_end":85158,"line_start":52,"line_end":52,"column_start":5,"column_end":18},"name":"StackOverflow","qualname":"::error::Error::StackOverflow","value":"Error::StackOverflow","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Max stack size exceeded for backtracking while executing regex.\n","sig":null,"attributes":[{"value":"/ Max stack size exceeded for backtracking while executing regex.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":85073,"byte_end":85140,"line_start":51,"line_end":51,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":645},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":85357,"byte_end":85379,"line_start":56,"line_end":56,"column_start":5,"column_end":27},"name":"BacktrackLimitExceeded","qualname":"::error::Error::BacktrackLimitExceeded","value":"Error::BacktrackLimitExceeded","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Max limit for backtracking count exceeded while executing the regex.\n Configure using\n [`RegexBuilder::backtrack_limit`](struct.RegexBuilder.html#method.backtrack_limit).\n","sig":null,"attributes":[{"value":"/ Max limit for backtracking count exceeded while executing the regex.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":85164,"byte_end":85236,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ Configure using","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":85241,"byte_end":85260,"line_start":54,"line_end":54,"column_start":5,"column_end":24}},{"value":"/ [`RegexBuilder::backtrack_limit`](struct.RegexBuilder.html#method.backtrack_limit).","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":85265,"byte_end":85352,"line_start":55,"line_end":55,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":647},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":85583,"byte_end":85598,"line_start":61,"line_end":61,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::error::Error::__Nonexhaustive","value":"Error::__Nonexhaustive","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" This enum may grow additional variants, so this makes sure clients don't count on exhaustive\n matching. Otherwise, adding a new variant could break existing code.\n","sig":null,"attributes":[{"value":"/ This enum may grow additional variants, so this makes sure clients don't count on exhaustive","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":85386,"byte_end":85482,"line_start":58,"line_end":58,"column_start":5,"column_end":101}},{"value":"/ matching. Otherwise, adding a new variant could break existing code.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":85487,"byte_end":85559,"line_start":59,"line_end":59,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":600},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":83794,"byte_end":83799,"line_start":8,"line_end":8,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    ParseError,\n    UnclosedOpenParen,\n    InvalidRepeat,\n    RecursionExceeded,\n    LookBehindNotConst,\n    TrailingBackslash,\n    InvalidEscape(String),\n    UnclosedUnicodeName,\n    InvalidHex,\n    InvalidCodepointValue,\n    InvalidClass,\n    UnknownFlag(String),\n    NonUnicodeUnsupported,\n    InvalidBackref,\n    InnerError(regex::Error),\n    InvalidGroupName,\n    InvalidGroupNameBackref(String),\n    NamedBackrefOnly,\n    TargetNotRepeatable,\n    StackOverflow,\n    BacktrackLimitExceeded,\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":647}],"decl_id":null,"docs":" An error for the result of compiling or running a regex.\n","sig":null,"attributes":[{"value":"/ An error for the result of compiling or running a regex.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":83707,"byte_end":83767,"line_start":6,"line_end":6,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":651},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":88103,"byte_end":88111,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Expander","qualname":"::expand::Expander","value":"Expander {  }","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655}],"decl_id":null,"docs":" A set of options for expanding a template string using the contents\n of capture groups.\n","sig":null,"attributes":[{"value":"/ A set of options for expanding a template string using the contents","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":87980,"byte_end":88051,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ of capture groups.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":88052,"byte_end":88074,"line_start":8,"line_end":8,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":89603,"byte_end":89609,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"python","qualname":"<Expander>::python","value":"pub fn python() -> Expander","parent":null,"children":[],"decl_id":null,"docs":" Returns an expander that uses Python-compatible syntax.","sig":null,"attributes":[{"value":"/ Returns an expander that uses Python-compatible syntax.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":88582,"byte_end":88641,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":88646,"byte_end":88649,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Expands all instances of `\\num` or `\\g<name>` in `replacement`","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":88654,"byte_end":88720,"line_start":34,"line_end":34,"column_start":5,"column_end":71}},{"value":"/ to the corresponding capture group `num` or `name`, and writes","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":88725,"byte_end":88791,"line_start":35,"line_end":35,"column_start":5,"column_end":71}},{"value":"/ them to the `dst` buffer given.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":88796,"byte_end":88831,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":88836,"byte_end":88839,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ `name` may be an integer corresponding to the index of the","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":88844,"byte_end":88906,"line_start":38,"line_end":38,"column_start":5,"column_end":67}},{"value":"/ capture group (counted by order of opening parenthesis where `\\0` is the","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":88911,"byte_end":88987,"line_start":39,"line_end":39,"column_start":5,"column_end":81}},{"value":"/ entire match) or it can be a name (consisting of letters, digits or","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":88992,"byte_end":89063,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ underscores) corresponding to a named capture group.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":89068,"byte_end":89124,"line_start":41,"line_end":41,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":89129,"byte_end":89132,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ `num` must be an integer corresponding to the index of the","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":89137,"byte_end":89199,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/ capture group.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":89204,"byte_end":89222,"line_start":44,"line_end":44,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":89227,"byte_end":89230,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ If `num` or `name` isn't a valid capture group (whether the name doesn't exist","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":89235,"byte_end":89317,"line_start":46,"line_end":46,"column_start":5,"column_end":87}},{"value":"/ or isn't a valid index), then it is replaced with the empty string.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":89322,"byte_end":89393,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":89398,"byte_end":89401,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The longest possible number is used. e.g., `\\10` looks up capture","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":89406,"byte_end":89475,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/ group 10 and not capture group 1 followed by a literal 0.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":89480,"byte_end":89541,"line_start":50,"line_end":50,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":89546,"byte_end":89549,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ To write a literal `\\`, use `\\\\`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":89554,"byte_end":89591,"line_start":52,"line_end":52,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":90234,"byte_end":90239,"line_start":69,"line_end":69,"column_start":12,"column_end":17},"name":"check","qualname":"<Expander>::check","value":"pub fn check(&Self, &str, &Regex) -> crate::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Checks `template` for errors.  The following conditions are checked for:","sig":null,"attributes":[{"value":"/ Checks `template` for errors.  The following conditions are checked for:","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":89785,"byte_end":89861,"line_start":62,"line_end":62,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":89866,"byte_end":89869,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ - A reference to a numbered group that does not exist in `regex`","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":89874,"byte_end":89942,"line_start":64,"line_end":64,"column_start":5,"column_end":73}},{"value":"/ - A reference to a numbered group (other than 0) when `regex` contains named groups","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":89947,"byte_end":90034,"line_start":65,"line_end":65,"column_start":5,"column_end":92}},{"value":"/ - A reference to a named group that does not occur in `regex`","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":90039,"byte_end":90104,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/ - An opening group name delimiter without a closing delimiter","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":90109,"byte_end":90174,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ - Using an empty string as a group name","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":90179,"byte_end":90222,"line_start":68,"line_end":68,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":91483,"byte_end":91489,"line_start":106,"line_end":106,"column_start":12,"column_end":18},"name":"escape","qualname":"<Expander>::escape","value":"pub fn escape<'a>(&Self, &'a str) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Escapes the substitution character in `text` so it appears literally\n in the output of `expansion`.","sig":null,"attributes":[{"value":"/ Escapes the substitution character in `text` so it appears literally","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":91182,"byte_end":91254,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/ in the output of `expansion`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":91259,"byte_end":91292,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":91297,"byte_end":91300,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":91305,"byte_end":91312,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":91317,"byte_end":91332,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/     fancy_regex::Expander::default().escape(\"Has a literal $ sign.\"),","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":91337,"byte_end":91410,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/     \"Has a literal $$ sign.\",","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":91415,"byte_end":91448,"line_start":103,"line_end":103,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":91453,"byte_end":91459,"line_start":104,"line_end":104,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":91464,"byte_end":91471,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":91962,"byte_end":91967,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"quote","qualname":"<Expander>::quote","value":"pub fn quote<'a>(&Self, &'a str) -> Cow","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.4.0\", note = \"Use `escape` instead.\")","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":91888,"byte_end":91950,"line_start":118,"line_end":118,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":92203,"byte_end":92212,"line_start":125,"line_end":125,"column_start":12,"column_end":21},"name":"expansion","qualname":"<Expander>::expansion","value":"pub fn expansion(&Self, &str, &Captures) -> String","parent":null,"children":[],"decl_id":null,"docs":" Expands the template string `template` using the syntax defined\n by this expander and the values of capture groups from `captures`.\n","sig":null,"attributes":[{"value":"/ Expands the template string `template` using the syntax defined","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":92049,"byte_end":92116,"line_start":123,"line_end":123,"column_start":5,"column_end":72}},{"value":"/ by this expander and the values of capture groups from `captures`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":92121,"byte_end":92191,"line_start":124,"line_end":124,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":92722,"byte_end":92738,"line_start":134,"line_end":134,"column_start":12,"column_end":28},"name":"append_expansion","qualname":"<Expander>::append_expansion","value":"pub fn append_expansion(&Self, &mut String, &str, &Captures)","parent":null,"children":[],"decl_id":null,"docs":" Appends the expansion produced by `expansion` to `dst`.  Potentially more efficient\n than calling `expansion` directly and appending to an existing string.\n","sig":null,"attributes":[{"value":"/ Appends the expansion produced by `expansion` to `dst`.  Potentially more efficient","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":92544,"byte_end":92631,"line_start":132,"line_end":132,"column_start":5,"column_end":92}},{"value":"/ than calling `expansion` directly and appending to an existing string.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":92636,"byte_end":92710,"line_start":133,"line_end":133,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":93331,"byte_end":93346,"line_start":145,"line_end":145,"column_start":12,"column_end":27},"name":"write_expansion","qualname":"<Expander>::write_expansion","value":"pub fn write_expansion<impl io::Write: io::Write>(&Self, impl io::Write, &str,\n                                                  &Captures) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the expansion produced by `expansion` to `dst`.  Potentially more efficient\n than calling `expansion` directly and writing the result.\n","sig":null,"attributes":[{"value":"/ Writes the expansion produced by `expansion` to `dst`.  Potentially more efficient","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":93167,"byte_end":93253,"line_start":143,"line_end":143,"column_start":5,"column_end":91}},{"value":"/ than calling `expansion` directly and writing the result.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":93258,"byte_end":93319,"line_start":144,"line_end":144,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":658},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/parse.rs","byte_start":97423,"byte_end":97431,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"ExprTree","qualname":"::parse::ExprTree","value":"ExprTree { expr, backrefs, named_groups }","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":659},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/parse.rs","byte_start":97442,"byte_end":97446,"line_start":47,"line_end":47,"column_start":9,"column_end":13},"name":"expr","qualname":"::parse::ExprTree::expr","value":"Expr","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":660},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/parse.rs","byte_start":97462,"byte_end":97470,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"name":"backrefs","qualname":"::parse::ExprTree::backrefs","value":"bit_set::BitSet","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":661},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/parse.rs","byte_start":97488,"byte_end":97500,"line_start":49,"line_end":49,"column_start":9,"column_end":21},"name":"named_groups","qualname":"::parse::ExprTree::named_groups","value":"std::collections::HashMap<std::string::String, usize>","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":296},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139128,"byte_end":139136,"line_start":10,"line_end":10,"column_start":11,"column_end":19},"name":"Replacer","qualname":"::replacer::Replacer","value":"Replacer","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299}],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a string.","sig":null,"attributes":[{"value":"/ Replacer describes types that can be used to replace matches in a string.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":138734,"byte_end":138811,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":138812,"byte_end":138815,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ In general, users of this crate shouldn't need to implement this trait,","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":138816,"byte_end":138891,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ since implementations are already provided for `&str` along with other","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":138892,"byte_end":138966,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ variants of string types and `FnMut(&Captures) -> String` (or any","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":138967,"byte_end":139036,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ `FnMut(&Captures) -> T` where `T: AsRef<str>`), which covers most use cases.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139037,"byte_end":139117,"line_start":9,"line_end":9,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139445,"byte_end":139459,"line_start":18,"line_end":18,"column_start":8,"column_end":22},"name":"replace_append","qualname":"::replacer::Replacer::replace_append","value":"pub fn replace_append(&mut Self, &Captures, &mut String)","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Appends text to `dst` to replace the current match.","sig":null,"attributes":[{"value":"/ Appends text to `dst` to replace the current match.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139143,"byte_end":139198,"line_start":11,"line_end":11,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139203,"byte_end":139206,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ The current match is represented by `caps`, which is guaranteed to","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139211,"byte_end":139281,"line_start":13,"line_end":13,"column_start":5,"column_end":75}},{"value":"/ have a match at capture group `0`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139286,"byte_end":139324,"line_start":14,"line_end":14,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139329,"byte_end":139332,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ For example, a no-op replacement would be","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139337,"byte_end":139382,"line_start":16,"line_end":16,"column_start":5,"column_end":50}},{"value":"/ `dst.push_str(caps.get(0).unwrap().as_str())`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139387,"byte_end":139437,"line_start":17,"line_end":17,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139868,"byte_end":139880,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"no_expansion","qualname":"::replacer::Replacer::no_expansion","value":"pub fn no_expansion(&mut Self) -> Option<Cow<, str>>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Return a fixed unchanging replacement string.","sig":null,"attributes":[{"value":"/ Return a fixed unchanging replacement string.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139516,"byte_end":139565,"line_start":20,"line_end":20,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139570,"byte_end":139573,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ When doing replacements, if access to `Captures` is not needed (e.g.,","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139578,"byte_end":139651,"line_start":22,"line_end":22,"column_start":5,"column_end":78}},{"value":"/ the replacement byte string does not need `$` expansion), then it can","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139656,"byte_end":139729,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ be beneficial to avoid finding sub-captures.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139734,"byte_end":139782,"line_start":24,"line_end":24,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139787,"byte_end":139790,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ In general, this is called once for every call to `replacen`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139795,"byte_end":139860,"line_start":26,"line_end":26,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140596,"byte_end":140602,"line_start":52,"line_end":52,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::replacer::Replacer::by_ref","value":"pub fn by_ref(&mut Self) -> ReplacerRef<, Self>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Return a `Replacer` that borrows and wraps this `Replacer`.","sig":null,"attributes":[{"value":"/ Return a `Replacer` that borrows and wraps this `Replacer`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":139938,"byte_end":140001,"line_start":31,"line_end":31,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140006,"byte_end":140009,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This is useful when you want to take a generic `Replacer` (which might","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140014,"byte_end":140088,"line_start":33,"line_end":33,"column_start":5,"column_end":79}},{"value":"/ not be cloneable) and use it without consuming it, so it can be used","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140093,"byte_end":140165,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ more than once.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140170,"byte_end":140189,"line_start":35,"line_end":35,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140194,"byte_end":140197,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140202,"byte_end":140215,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140220,"byte_end":140223,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140228,"byte_end":140235,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ use fancy_regex::{Regex, Replacer};","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140240,"byte_end":140279,"line_start":40,"line_end":40,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140284,"byte_end":140287,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ fn replace_all_twice<R: Replacer>(","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140292,"byte_end":140330,"line_start":42,"line_end":42,"column_start":5,"column_end":43}},{"value":"/     re: Regex,","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140335,"byte_end":140353,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/     src: &str,","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140358,"byte_end":140376,"line_start":44,"line_end":44,"column_start":5,"column_end":23}},{"value":"/     mut rep: R,","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140381,"byte_end":140400,"line_start":45,"line_end":45,"column_start":5,"column_end":24}},{"value":"/ ) -> String {","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140405,"byte_end":140422,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/     let dst = re.replace_all(src, rep.by_ref());","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140427,"byte_end":140479,"line_start":47,"line_end":47,"column_start":5,"column_end":57}},{"value":"/     let dst = re.replace_all(&dst, rep.by_ref());","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140484,"byte_end":140537,"line_start":48,"line_end":48,"column_start":5,"column_end":58}},{"value":"/     dst.into_owned()","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140542,"byte_end":140566,"line_start":49,"line_end":49,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140571,"byte_end":140576,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140581,"byte_end":140588,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":675},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140819,"byte_end":140830,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"ReplacerRef","qualname":"::replacer::ReplacerRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" By-reference adaptor for a `Replacer`","sig":null,"attributes":[{"value":"/ By-reference adaptor for a `Replacer`","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140672,"byte_end":140713,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140714,"byte_end":140717,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Returned by [`Replacer::by_ref`](trait.Replacer.html#method.by_ref).","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140718,"byte_end":140790,"line_start":59,"line_end":59,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":684},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":143241,"byte_end":143249,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"NoExpand","qualname":"::replacer::NoExpand","value":"","parent":null,"children":[],"decl_id":null,"docs":" `NoExpand` indicates literal string replacement.","sig":null,"attributes":[{"value":"/ `NoExpand` indicates literal string replacement.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":142808,"byte_end":142860,"line_start":141,"line_end":141,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":142861,"byte_end":142864,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ It can be used with `replace` and `replace_all` to do a literal string","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":142865,"byte_end":142939,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ replacement without expanding `$name` to their corresponding capture","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":142940,"byte_end":143012,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ groups. This can be both convenient (to avoid escaping `$`, for example)","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":143013,"byte_end":143089,"line_start":145,"line_end":145,"column_start":1,"column_end":77}},{"value":"/ and performant (since capture groups don't need to be found).","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":143090,"byte_end":143155,"line_start":146,"line_end":146,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":143156,"byte_end":143159,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ `'t` is the lifetime of the literal text.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":143160,"byte_end":143205,"line_start":148,"line_end":148,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":687},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":143254,"byte_end":143265,"line_start":150,"line_end":150,"column_start":25,"column_end":36},"name":"0","qualname":"::replacer::NoExpand::0","value":"&'t str","parent":{"krate":0,"index":684},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":695},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147099,"byte_end":147102,"line_start":90,"line_end":90,"column_start":5,"column_end":8},"name":"End","qualname":"::vm::Insn::End","value":"Insn::End","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Successful end of program\n","sig":null,"attributes":[{"value":"/ Successful end of program","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147065,"byte_end":147094,"line_start":89,"line_end":89,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":697},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147156,"byte_end":147159,"line_start":92,"line_end":92,"column_start":5,"column_end":8},"name":"Any","qualname":"::vm::Insn::Any","value":"Insn::Any","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Match any character (including newline)\n","sig":null,"attributes":[{"value":"/ Match any character (including newline)","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147108,"byte_end":147151,"line_start":91,"line_end":91,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":699},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147217,"byte_end":147224,"line_start":94,"line_end":94,"column_start":5,"column_end":12},"name":"AnyNoNL","qualname":"::vm::Insn::AnyNoNL","value":"Insn::AnyNoNL","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Match any character (not including newline)\n","sig":null,"attributes":[{"value":"/ Match any character (not including newline)","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147165,"byte_end":147212,"line_start":93,"line_end":93,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":701},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147284,"byte_end":147287,"line_start":96,"line_end":96,"column_start":5,"column_end":8},"name":"Lit","qualname":"::vm::Insn::Lit","value":"Insn::Lit(String)","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Match the literal string at the current index\n","sig":null,"attributes":[{"value":"/ Match the literal string at the current index","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147230,"byte_end":147279,"line_start":95,"line_end":95,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":704},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147500,"byte_end":147505,"line_start":99,"line_end":99,"column_start":5,"column_end":10},"name":"Split","qualname":"::vm::Insn::Split","value":"Insn::Split(usize, usize)","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Split execution into two threads. The two fields are positions of instructions. Execution\n first tries the first thread. If that fails, the second position is tried.\n","sig":null,"attributes":[{"value":"/ Split execution into two threads. The two fields are positions of instructions. Execution","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147319,"byte_end":147412,"line_start":97,"line_end":97,"column_start":5,"column_end":98}},{"value":"/ first tries the first thread. If that fails, the second position is tried.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147417,"byte_end":147495,"line_start":98,"line_end":98,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":708},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147565,"byte_end":147568,"line_start":101,"line_end":101,"column_start":5,"column_end":8},"name":"Jmp","qualname":"::vm::Insn::Jmp","value":"Insn::Jmp(usize)","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Jump to instruction at position\n","sig":null,"attributes":[{"value":"/ Jump to instruction at position","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147525,"byte_end":147560,"line_start":100,"line_end":100,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":711},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147643,"byte_end":147647,"line_start":103,"line_end":103,"column_start":5,"column_end":9},"name":"Save","qualname":"::vm::Insn::Save","value":"Insn::Save(usize)","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Save the current string index into the specified slot\n","sig":null,"attributes":[{"value":"/ Save the current string index into the specified slot","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147581,"byte_end":147638,"line_start":102,"line_end":102,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":714},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147701,"byte_end":147706,"line_start":105,"line_end":105,"column_start":5,"column_end":10},"name":"Save0","qualname":"::vm::Insn::Save0","value":"Insn::Save0(usize)","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Save `0` into the specified slot\n","sig":null,"attributes":[{"value":"/ Save `0` into the specified slot","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147660,"byte_end":147696,"line_start":104,"line_end":104,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":717},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147798,"byte_end":147805,"line_start":107,"line_end":107,"column_start":5,"column_end":12},"name":"Restore","qualname":"::vm::Insn::Restore","value":"Insn::Restore(usize)","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Set the string index to the value that was saved in the specified slot\n","sig":null,"attributes":[{"value":"/ Set the string index to the value that was saved in the specified slot","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147719,"byte_end":147793,"line_start":106,"line_end":106,"column_start":5,"column_end":79}}]},{"kind":"StructVariant","id":{"krate":0,"index":720},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147870,"byte_end":147878,"line_start":109,"line_end":109,"column_start":5,"column_end":13},"name":"RepeatGr","qualname":"::vm::Insn::RepeatGr","value":"Insn::RepeatGr { lo, hi, next, repeat }","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Repeat greedily (match as much as possible)\n","sig":null,"attributes":[{"value":"/ Repeat greedily (match as much as possible)","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147818,"byte_end":147865,"line_start":108,"line_end":108,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":725},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":148231,"byte_end":148239,"line_start":120,"line_end":120,"column_start":5,"column_end":13},"name":"RepeatNg","qualname":"::vm::Insn::RepeatNg","value":"Insn::RepeatNg { lo, hi, next, repeat }","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Repeat non-greedily (prefer matching as little as possible)\n","sig":null,"attributes":[{"value":"/ Repeat non-greedily (prefer matching as little as possible)","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":148163,"byte_end":148226,"line_start":119,"line_end":119,"column_start":5,"column_end":68}}]},{"kind":"StructVariant","id":{"krate":0,"index":730},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":148594,"byte_end":148609,"line_start":131,"line_end":131,"column_start":5,"column_end":20},"name":"RepeatEpsilonGr","qualname":"::vm::Insn::RepeatEpsilonGr","value":"Insn::RepeatEpsilonGr { lo, next, repeat, check }","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Repeat greedily and prevent infinite loops from empty matches\n","sig":null,"attributes":[{"value":"/ Repeat greedily and prevent infinite loops from empty matches","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":148524,"byte_end":148589,"line_start":130,"line_end":130,"column_start":5,"column_end":70}}]},{"kind":"StructVariant","id":{"krate":0,"index":735},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":149015,"byte_end":149030,"line_start":142,"line_end":142,"column_start":5,"column_end":20},"name":"RepeatEpsilonNg","qualname":"::vm::Insn::RepeatEpsilonNg","value":"Insn::RepeatEpsilonNg { lo, next, repeat, check }","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Repeat non-greedily and prevent infinite loops from empty matches\n","sig":null,"attributes":[{"value":"/ Repeat non-greedily and prevent infinite loops from empty matches","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":148941,"byte_end":149010,"line_start":141,"line_end":141,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":740},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":149398,"byte_end":149420,"line_start":153,"line_end":153,"column_start":5,"column_end":27},"name":"FailNegativeLookAround","qualname":"::vm::Insn::FailNegativeLookAround","value":"Insn::FailNegativeLookAround","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Negative look-around failed\n","sig":null,"attributes":[{"value":"/ Negative look-around failed","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":149362,"byte_end":149393,"line_start":152,"line_end":152,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":742},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":149484,"byte_end":149490,"line_start":155,"line_end":155,"column_start":5,"column_end":11},"name":"GoBack","qualname":"::vm::Insn::GoBack","value":"Insn::GoBack(usize)","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Set IX back by the specified number of characters\n","sig":null,"attributes":[{"value":"/ Set IX back by the specified number of characters","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":149426,"byte_end":149479,"line_start":154,"line_end":154,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":745},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":149553,"byte_end":149560,"line_start":157,"line_end":157,"column_start":5,"column_end":12},"name":"Backref","qualname":"::vm::Insn::Backref","value":"Insn::Backref(usize)","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Back reference to a group number to check\n","sig":null,"attributes":[{"value":"/ Back reference to a group number to check","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":149503,"byte_end":149548,"line_start":156,"line_end":156,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":748},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":149603,"byte_end":149614,"line_start":159,"line_end":159,"column_start":5,"column_end":16},"name":"BeginAtomic","qualname":"::vm::Insn::BeginAtomic","value":"Insn::BeginAtomic","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Begin of atomic group\n","sig":null,"attributes":[{"value":"/ Begin of atomic group","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":149573,"byte_end":149598,"line_start":158,"line_end":158,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":750},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":149648,"byte_end":149657,"line_start":161,"line_end":161,"column_start":5,"column_end":14},"name":"EndAtomic","qualname":"::vm::Insn::EndAtomic","value":"Insn::EndAtomic","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" End of atomic group\n","sig":null,"attributes":[{"value":"/ End of atomic group","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":149620,"byte_end":149643,"line_start":160,"line_end":160,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":752},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":149725,"byte_end":149738,"line_start":163,"line_end":163,"column_start":5,"column_end":18},"name":"DelegateSized","qualname":"::vm::Insn::DelegateSized","value":"Insn::DelegateSized(Box<Regex>, usize)","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Delegate matching to the regex crate for a fixed size\n","sig":null,"attributes":[{"value":"/ Delegate matching to the regex crate for a fixed size","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":149663,"byte_end":149720,"line_start":162,"line_end":162,"column_start":5,"column_end":62}}]},{"kind":"StructVariant","id":{"krate":0,"index":756},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":149808,"byte_end":149816,"line_start":165,"line_end":165,"column_start":5,"column_end":13},"name":"Delegate","qualname":"::vm::Insn::Delegate","value":"Insn::Delegate { inner, inner1, start_group, end_group }","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Delegate matching to the regex crate\n","sig":null,"attributes":[{"value":"/ Delegate matching to the regex crate","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":149763,"byte_end":149803,"line_start":164,"line_end":164,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":694},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":147054,"byte_end":147058,"line_start":88,"line_end":88,"column_start":10,"column_end":14},"name":"Insn","qualname":"::vm::Insn","value":"pub enum Insn {\n    End,\n    Any,\n    AnyNoNL,\n    Lit(String),\n    Split(usize, usize),\n    Jmp(usize),\n    Save(usize),\n    Save0(usize),\n    Restore(usize),\n    RepeatGr {\n        lo: usize,\n        hi: usize,\n        next: usize,\n        repeat: usize,\n    },\n    RepeatNg {\n        lo: usize,\n        hi: usize,\n        next: usize,\n        repeat: usize,\n    },\n    RepeatEpsilonGr {\n        lo: usize,\n        next: usize,\n        repeat: usize,\n        check: usize,\n    },\n    RepeatEpsilonNg {\n        lo: usize,\n        next: usize,\n        repeat: usize,\n        check: usize,\n    },\n    FailNegativeLookAround,\n    GoBack(usize),\n    Backref(usize),\n    BeginAtomic,\n    EndAtomic,\n    DelegateSized(Box<Regex>, usize),\n    Delegate {\n        inner: Box<Regex>,\n        inner1: Option<Box<Regex>>,\n        start_group: usize,\n        end_group: usize,\n    },\n}","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":725},{"krate":0,"index":730},{"krate":0,"index":735},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":752},{"krate":0,"index":756}],"decl_id":null,"docs":" Instruction of the VM.\n","sig":null,"attributes":[{"value":"/ Instruction of the VM.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":146994,"byte_end":147020,"line_start":86,"line_end":86,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":765},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":150838,"byte_end":150842,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"Prog","qualname":"::vm::Prog","value":"Prog { body }","parent":null,"children":[{"krate":0,"index":766},{"krate":0,"index":767}],"decl_id":null,"docs":" Sequence of instructions for the VM to execute.\n","sig":null,"attributes":[{"value":"/ Sequence of instructions for the VM to execute.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":150751,"byte_end":150802,"line_start":186,"line_end":186,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":766},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":150889,"byte_end":150893,"line_start":190,"line_end":190,"column_start":9,"column_end":13},"name":"body","qualname":"::vm::Prog::body","value":"std::vec::Vec<vm::Insn>","parent":{"krate":0,"index":765},"children":[],"decl_id":null,"docs":" Instructions of the program\n","sig":null,"attributes":[{"value":"/ Instructions of the program","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":150849,"byte_end":150880,"line_start":189,"line_end":189,"column_start":5,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":386},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":157811,"byte_end":157820,"line_start":402,"line_end":402,"column_start":8,"column_end":17},"name":"run_trace","qualname":"::vm::run_trace","value":"pub fn run_trace(&Prog, &str, usize) -> Result<Option<Vec<usize>>>","parent":null,"children":[],"decl_id":null,"docs":" Run the program with trace printing for debugging.\n","sig":null,"attributes":[{"value":"/ Run the program with trace printing for debugging.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":157749,"byte_end":157803,"line_start":401,"line_end":401,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":387},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":158001,"byte_end":158012,"line_start":407,"line_end":407,"column_start":8,"column_end":19},"name":"run_default","qualname":"::vm::run_default","value":"pub fn run_default(&Prog, &str, usize) -> Result<Option<Vec<usize>>>","parent":null,"children":[],"decl_id":null,"docs":" Run the program with default options.\n","sig":null,"attributes":[{"value":"/ Run the program with default options.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":157952,"byte_end":157993,"line_start":406,"line_end":406,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":783},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":5346,"byte_end":5358,"line_start":179,"line_end":179,"column_start":12,"column_end":24},"name":"RegexBuilder","qualname":"::RegexBuilder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A builder for a `Regex` to allow configuring options.\n","sig":null,"attributes":[{"value":"/ A builder for a `Regex` to allow configuring options.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":5260,"byte_end":5317,"line_start":177,"line_end":177,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":788},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":5438,"byte_end":5443,"line_start":183,"line_end":183,"column_start":12,"column_end":17},"name":"Regex","qualname":"::Regex","value":"Regex {  }","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790}],"decl_id":null,"docs":" A compiled regular expression.\n","sig":null,"attributes":[{"value":"/ A compiled regular expression.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":5375,"byte_end":5409,"line_start":181,"line_end":181,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":803},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":5940,"byte_end":5945,"line_start":205,"line_end":205,"column_start":12,"column_end":17},"name":"Match","qualname":"::Match","value":"Match {  }","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807}],"decl_id":null,"docs":" A single match of a regex or group in an input text\n","sig":null,"attributes":[{"value":"/ A single match of a regex or group in an input text","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":5828,"byte_end":5883,"line_start":203,"line_end":203,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":827},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":6331,"byte_end":6338,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"Matches","qualname":"::Matches","value":"Matches {  }","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833}],"decl_id":null,"docs":" An iterator over all non-overlapping matches for a particular string.","sig":null,"attributes":[{"value":"/ An iterator over all non-overlapping matches for a particular string.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":6008,"byte_end":6081,"line_start":211,"line_end":211,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":6082,"byte_end":6085,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ The iterator yields a `Result<Match>`. The iterator stops when no more","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":6086,"byte_end":6160,"line_start":213,"line_end":213,"column_start":1,"column_end":75}},{"value":"/ matches can be found.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":6161,"byte_end":6186,"line_start":214,"line_end":214,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":6187,"byte_end":6190,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ `'r` is the lifetime of the compiled regular expression and `'t` is the","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":6191,"byte_end":6266,"line_start":216,"line_end":216,"column_start":1,"column_end":76}},{"value":"/ lifetime of the matched string.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":6267,"byte_end":6302,"line_start":217,"line_end":217,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":6524,"byte_end":6528,"line_start":228,"line_end":228,"column_start":12,"column_end":16},"name":"text","qualname":"<Matches>::text","value":"pub fn text(&Self) -> &'t str","parent":null,"children":[],"decl_id":null,"docs":" Return the text being searched.\n","sig":null,"attributes":[{"value":"/ Return the text being searched.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":6477,"byte_end":6512,"line_start":227,"line_end":227,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":6622,"byte_end":6627,"line_start":233,"line_end":233,"column_start":12,"column_end":17},"name":"regex","qualname":"<Matches>::regex","value":"pub fn regex(&Self) -> &'r Regex","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying regex.\n","sig":null,"attributes":[{"value":"/ Return the underlying regex.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":6578,"byte_end":6610,"line_start":232,"line_end":232,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":838},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":8189,"byte_end":8203,"line_start":282,"line_end":282,"column_start":12,"column_end":26},"name":"CaptureMatches","qualname":"::CaptureMatches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator that yields all non-overlapping capture groups matching a\n particular regular expression.","sig":null,"attributes":[{"value":"/ An iterator that yields all non-overlapping capture groups matching a","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":7874,"byte_end":7947,"line_start":274,"line_end":274,"column_start":1,"column_end":74}},{"value":"/ particular regular expression.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":7948,"byte_end":7982,"line_start":275,"line_end":275,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":7983,"byte_end":7986,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ The iterator stops when no more matches can be found.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":7987,"byte_end":8044,"line_start":277,"line_end":277,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":8045,"byte_end":8048,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ `'r` is the lifetime of the compiled regular expression and `'t` is the","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":8049,"byte_end":8124,"line_start":279,"line_end":279,"column_start":1,"column_end":76}},{"value":"/ lifetime of the matched string.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":8125,"byte_end":8160,"line_start":280,"line_end":280,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":8320,"byte_end":8324,"line_start":286,"line_end":286,"column_start":12,"column_end":16},"name":"text","qualname":"<CaptureMatches>::text","value":"pub fn text(&Self) -> &'t str","parent":null,"children":[],"decl_id":null,"docs":" Return the text being searched.\n","sig":null,"attributes":[{"value":"/ Return the text being searched.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":8273,"byte_end":8308,"line_start":285,"line_end":285,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":8420,"byte_end":8425,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"regex","qualname":"<CaptureMatches>::regex","value":"pub fn regex(&Self) -> &'r Regex","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying regex.\n","sig":null,"attributes":[{"value":"/ Return the underlying regex.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":8376,"byte_end":8408,"line_start":290,"line_end":290,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":847},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":9618,"byte_end":9626,"line_start":332,"line_end":332,"column_start":12,"column_end":20},"name":"Captures","qualname":"::Captures","value":"Captures {  }","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850}],"decl_id":null,"docs":" A set of capture groups found for a regex.\n","sig":null,"attributes":[{"value":"/ A set of capture groups found for a regex.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":9543,"byte_end":9589,"line_start":330,"line_end":330,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":865},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":10004,"byte_end":10021,"line_start":351,"line_end":351,"column_start":12,"column_end":29},"name":"SubCaptureMatches","qualname":"::SubCaptureMatches","value":"SubCaptureMatches {  }","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869}],"decl_id":null,"docs":" Iterator for captured groups in order in which they appear in the regex.\n","sig":null,"attributes":[{"value":"/ Iterator for captured groups in order in which they appear in the regex.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":9899,"byte_end":9975,"line_start":349,"line_end":349,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":10686,"byte_end":10689,"line_start":379,"line_end":379,"column_start":12,"column_end":15},"name":"new","qualname":"<RegexBuilder>::new","value":"pub fn new(&str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new regex builder with a regex pattern.","sig":null,"attributes":[{"value":"/ Create a new regex builder with a regex pattern.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":10542,"byte_end":10594,"line_start":376,"line_end":376,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":10599,"byte_end":10602,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ If the pattern is invalid, the call to `build` will fail later.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":10607,"byte_end":10674,"line_start":378,"line_end":378,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":10980,"byte_end":10985,"line_start":388,"line_end":388,"column_start":12,"column_end":17},"name":"build","qualname":"<RegexBuilder>::build","value":"pub fn build(&Self) -> Result<Regex>","parent":null,"children":[],"decl_id":null,"docs":" Build the `Regex`.","sig":null,"attributes":[{"value":"/ Build the `Regex`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":10856,"byte_end":10878,"line_start":385,"line_end":385,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":10883,"byte_end":10886,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Returns an [`Error`](enum.Error.html) if the pattern could not be parsed.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":10891,"byte_end":10968,"line_start":387,"line_end":387,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":11488,"byte_end":11503,"line_start":398,"line_end":398,"column_start":12,"column_end":27},"name":"backtrack_limit","qualname":"<RegexBuilder>::backtrack_limit","value":"pub fn backtrack_limit(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Limit for how many times backtracking should be attempted for fancy regexes (where\n backtracking is used). If this limit is exceeded, execution returns an error with\n [`Error::BacktrackLimitExceeded`](enum.Error.html#variant.BacktrackLimitExceeded).\n This is for preventing a regex with catastrophic backtracking to run for too long.","sig":null,"attributes":[{"value":"/ Limit for how many times backtracking should be attempted for fancy regexes (where","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":11066,"byte_end":11152,"line_start":392,"line_end":392,"column_start":5,"column_end":91}},{"value":"/ backtracking is used). If this limit is exceeded, execution returns an error with","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":11157,"byte_end":11242,"line_start":393,"line_end":393,"column_start":5,"column_end":90}},{"value":"/ [`Error::BacktrackLimitExceeded`](enum.Error.html#variant.BacktrackLimitExceeded).","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":11247,"byte_end":11333,"line_start":394,"line_end":394,"column_start":5,"column_end":91}},{"value":"/ This is for preventing a regex with catastrophic backtracking to run for too long.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":11338,"byte_end":11424,"line_start":395,"line_end":395,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":11429,"byte_end":11432,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Default is `1_000_000` (1 million).","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":11437,"byte_end":11476,"line_start":397,"line_end":397,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":11989,"byte_end":12008,"line_start":408,"line_end":408,"column_start":12,"column_end":31},"name":"delegate_size_limit","qualname":"<RegexBuilder>::delegate_size_limit","value":"pub fn delegate_size_limit(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the approximate size limit of the compiled regular expression.","sig":null,"attributes":[{"value":"/ Set the approximate size limit of the compiled regular expression.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":11608,"byte_end":11678,"line_start":403,"line_end":403,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":11683,"byte_end":11686,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ This option is forwarded from the wrapped `regex` crate. Note that depending on the used","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":11691,"byte_end":11783,"line_start":405,"line_end":405,"column_start":5,"column_end":97}},{"value":"/ regex features there may be multiple delegated sub-regexes fed to the `regex` crate. As","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":11788,"byte_end":11879,"line_start":406,"line_end":406,"column_start":5,"column_end":96}},{"value":"/ such the actual limit is closer to `<number of delegated regexes> * delegate_size_limit`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":11884,"byte_end":11977,"line_start":407,"line_end":407,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":12504,"byte_end":12527,"line_start":419,"line_end":419,"column_start":12,"column_end":35},"name":"delegate_dfa_size_limit","qualname":"<RegexBuilder>::delegate_dfa_size_limit","value":"pub fn delegate_dfa_size_limit(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the approximate size of the cache used by the DFA.","sig":null,"attributes":[{"value":"/ Set the approximate size of the cache used by the DFA.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":12123,"byte_end":12181,"line_start":413,"line_end":413,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":12186,"byte_end":12189,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ This option is forwarded from the wrapped `regex` crate. Note that depending on the used","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":12194,"byte_end":12286,"line_start":415,"line_end":415,"column_start":5,"column_end":97}},{"value":"/ regex features there may be multiple delegated sub-regexes fed to the `regex` crate. As","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":12291,"byte_end":12382,"line_start":416,"line_end":416,"column_start":5,"column_end":96}},{"value":"/ such the actual limit is closer to `<number of delegated regexes> *","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":12387,"byte_end":12458,"line_start":417,"line_end":417,"column_start":5,"column_end":76}},{"value":"/ delegate_dfa_size_limit`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":12463,"byte_end":12492,"line_start":418,"line_end":418,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":13386,"byte_end":13389,"line_start":452,"line_end":452,"column_start":12,"column_end":15},"name":"new","qualname":"<Regex>::new","value":"pub fn new(&str) -> Result<Regex>","parent":null,"children":[],"decl_id":null,"docs":" Parse and compile a regex with default options, see `RegexBuilder`.","sig":null,"attributes":[{"value":"/ Parse and compile a regex with default options, see `RegexBuilder`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":13213,"byte_end":13284,"line_start":449,"line_end":449,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":13289,"byte_end":13292,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Returns an [`Error`](enum.Error.html) if the pattern could not be parsed.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":13297,"byte_end":13374,"line_start":451,"line_end":451,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":15466,"byte_end":15472,"line_start":514,"line_end":514,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Regex>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original string of this regex.\n","sig":null,"attributes":[{"value":"/ Returns the original string of this regex.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":15408,"byte_end":15454,"line_start":513,"line_end":513,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":16015,"byte_end":16023,"line_start":533,"line_end":533,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Regex>::is_match","value":"pub fn is_match(&Self, &str) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Check if the regex matches the input text.","sig":null,"attributes":[{"value":"/ Check if the regex matches the input text.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":15670,"byte_end":15716,"line_start":521,"line_end":521,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":15721,"byte_end":15724,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":15729,"byte_end":15742,"line_start":523,"line_end":523,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":15747,"byte_end":15750,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ Test if some text contains the same word twice:","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":15755,"byte_end":15806,"line_start":525,"line_end":525,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":15811,"byte_end":15814,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":15819,"byte_end":15830,"line_start":527,"line_end":527,"column_start":5,"column_end":16}},{"value":"/ # use fancy_regex::Regex;","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":15835,"byte_end":15864,"line_start":528,"line_end":528,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":15869,"byte_end":15872,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ let re = Regex::new(r\"(\\w+) \\1\").unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":15877,"byte_end":15923,"line_start":530,"line_end":530,"column_start":5,"column_end":51}},{"value":"/ assert!(re.is_match(\"mirror mirror on the wall\").unwrap());","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":15928,"byte_end":15991,"line_start":531,"line_end":531,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":15996,"byte_end":16003,"line_start":532,"line_end":532,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17169,"byte_end":17178,"line_start":564,"line_end":564,"column_start":12,"column_end":21},"name":"find_iter","qualname":"<Regex>::find_iter","value":"pub fn find_iter<'r, 't>(&'r Self, &'t str) -> Matches","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator for each successive non-overlapping match in `text`.","sig":null,"attributes":[{"value":"/ Returns an iterator for each successive non-overlapping match in `text`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":16390,"byte_end":16466,"line_start":545,"line_end":545,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":16471,"byte_end":16474,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ If you have capturing groups in your regex that you want to extract, use the [Regex::captures_iter()]","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":16479,"byte_end":16584,"line_start":547,"line_end":547,"column_start":5,"column_end":110}},{"value":"/ method.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":16589,"byte_end":16600,"line_start":548,"line_end":548,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":16605,"byte_end":16608,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":16613,"byte_end":16626,"line_start":550,"line_end":550,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":16631,"byte_end":16634,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ Find all words followed by an exclamation point:","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":16639,"byte_end":16691,"line_start":552,"line_end":552,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":16696,"byte_end":16699,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":16704,"byte_end":16715,"line_start":554,"line_end":554,"column_start":5,"column_end":16}},{"value":"/ # use fancy_regex::Regex;","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":16720,"byte_end":16749,"line_start":555,"line_end":555,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":16754,"byte_end":16757,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let re = Regex::new(r\"\\w+(?=!)\").unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":16762,"byte_end":16808,"line_start":557,"line_end":557,"column_start":5,"column_end":51}},{"value":"/ let mut matches = re.find_iter(\"so fancy! even with! iterators!\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":16813,"byte_end":16883,"line_start":558,"line_end":558,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(matches.next().unwrap().unwrap().as_str(), \"fancy\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":16888,"byte_end":16955,"line_start":559,"line_end":559,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(matches.next().unwrap().unwrap().as_str(), \"with\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":16960,"byte_end":17026,"line_start":560,"line_end":560,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(matches.next().unwrap().unwrap().as_str(), \"iterators\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17031,"byte_end":17102,"line_start":561,"line_end":561,"column_start":5,"column_end":76}},{"value":"/ assert!(matches.next().is_none());","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17107,"byte_end":17145,"line_start":562,"line_end":562,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17150,"byte_end":17157,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17855,"byte_end":17859,"line_start":588,"line_end":588,"column_start":12,"column_end":16},"name":"find","qualname":"<Regex>::find","value":"pub fn find<'t>(&Self, &'t str) -> Result<Option<Match>>","parent":null,"children":[],"decl_id":null,"docs":" Find the first match in the input text.","sig":null,"attributes":[{"value":"/ Find the first match in the input text.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17368,"byte_end":17411,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17416,"byte_end":17419,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ If you have capturing groups in your regex that you want to extract, use the [Regex::captures()]","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17424,"byte_end":17524,"line_start":575,"line_end":575,"column_start":5,"column_end":105}},{"value":"/ method.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17529,"byte_end":17540,"line_start":576,"line_end":576,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17545,"byte_end":17548,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17553,"byte_end":17566,"line_start":578,"line_end":578,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17571,"byte_end":17574,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ Find a word that is followed by an exclamation point:","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17579,"byte_end":17636,"line_start":580,"line_end":580,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17641,"byte_end":17644,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17649,"byte_end":17660,"line_start":582,"line_end":582,"column_start":5,"column_end":16}},{"value":"/ # use fancy_regex::Regex;","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17665,"byte_end":17694,"line_start":583,"line_end":583,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17699,"byte_end":17702,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ let re = Regex::new(r\"\\w+(?=!)\").unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17707,"byte_end":17753,"line_start":585,"line_end":585,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(re.find(\"so fancy!\").unwrap().unwrap().as_str(), \"fancy\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17758,"byte_end":17831,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17836,"byte_end":17843,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18624,"byte_end":18637,"line_start":610,"line_end":610,"column_start":12,"column_end":25},"name":"find_from_pos","qualname":"<Regex>::find_from_pos","value":"pub fn find_from_pos<'t>(&Self, &'t str, usize) -> Result<Option<Match>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the first match in `text`, starting from the specified byte position `pos`.","sig":null,"attributes":[{"value":"/ Returns the first match in `text`, starting from the specified byte position `pos`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":17964,"byte_end":18051,"line_start":592,"line_end":592,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18056,"byte_end":18059,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18064,"byte_end":18078,"line_start":594,"line_end":594,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18083,"byte_end":18086,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ Finding match starting at a position:","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18091,"byte_end":18132,"line_start":596,"line_end":596,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18137,"byte_end":18140,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18145,"byte_end":18152,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ # use fancy_regex::Regex;","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18157,"byte_end":18186,"line_start":599,"line_end":599,"column_start":5,"column_end":34}},{"value":"/ let re = Regex::new(r\"(?m:^)(\\d+)\").unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18191,"byte_end":18240,"line_start":600,"line_end":600,"column_start":5,"column_end":54}},{"value":"/ let text = \"1 test 123\\n2 foo\";","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18245,"byte_end":18280,"line_start":601,"line_end":601,"column_start":5,"column_end":40}},{"value":"/ let mat = re.find_from_pos(text, 7).unwrap().unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18285,"byte_end":18343,"line_start":602,"line_end":602,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18348,"byte_end":18351,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(mat.start(), 11);","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18356,"byte_end":18388,"line_start":604,"line_end":604,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(mat.end(), 12);","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18393,"byte_end":18423,"line_start":605,"line_end":605,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18428,"byte_end":18435,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18440,"byte_end":18443,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ Note that in some cases this is not the same as using the `find`","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18448,"byte_end":18516,"line_start":608,"line_end":608,"column_start":5,"column_end":73}},{"value":"/ method and passing a slice of the string, see [Regex::captures_from_pos()] for details.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":18521,"byte_end":18612,"line_start":609,"line_end":609,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20120,"byte_end":20133,"line_start":647,"line_end":647,"column_start":12,"column_end":25},"name":"captures_iter","qualname":"<Regex>::captures_iter","value":"pub fn captures_iter<'r, 't>(&'r Self, &'t str) -> CaptureMatches","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all the non-overlapping capture groups matched in `text`.","sig":null,"attributes":[{"value":"/ Returns an iterator over all the non-overlapping capture groups matched in `text`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19126,"byte_end":19212,"line_start":622,"line_end":622,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19217,"byte_end":19220,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19225,"byte_end":19239,"line_start":624,"line_end":624,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19244,"byte_end":19247,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ Finding all matches and capturing parts of each:","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19252,"byte_end":19304,"line_start":626,"line_end":626,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19309,"byte_end":19312,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19317,"byte_end":19328,"line_start":628,"line_end":628,"column_start":5,"column_end":16}},{"value":"/ # use fancy_regex::Regex;","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19333,"byte_end":19362,"line_start":629,"line_end":629,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19367,"byte_end":19370,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ let re = Regex::new(r\"(\\d{4})-(\\d{2})\").unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19375,"byte_end":19428,"line_start":631,"line_end":631,"column_start":5,"column_end":58}},{"value":"/ let text = \"It was between 2018-04 and 2020-01\";","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19433,"byte_end":19485,"line_start":632,"line_end":632,"column_start":5,"column_end":57}},{"value":"/ let mut all_captures = re.captures_iter(text);","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19490,"byte_end":19540,"line_start":633,"line_end":633,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19545,"byte_end":19548,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ let first = all_captures.next().unwrap().unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19553,"byte_end":19607,"line_start":635,"line_end":635,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(first.get(1).unwrap().as_str(), \"2018\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19612,"byte_end":19667,"line_start":636,"line_end":636,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(first.get(2).unwrap().as_str(), \"04\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19672,"byte_end":19725,"line_start":637,"line_end":637,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(first.get(0).unwrap().as_str(), \"2018-04\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19730,"byte_end":19788,"line_start":638,"line_end":638,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19793,"byte_end":19796,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ let second = all_captures.next().unwrap().unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19801,"byte_end":19856,"line_start":640,"line_end":640,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(second.get(1).unwrap().as_str(), \"2020\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19861,"byte_end":19917,"line_start":641,"line_end":641,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(second.get(2).unwrap().as_str(), \"01\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19922,"byte_end":19976,"line_start":642,"line_end":642,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(second.get(0).unwrap().as_str(), \"2020-01\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":19981,"byte_end":20040,"line_start":643,"line_end":643,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20045,"byte_end":20048,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ assert!(all_captures.next().is_none());","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20053,"byte_end":20096,"line_start":645,"line_end":645,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20101,"byte_end":20108,"line_start":646,"line_end":646,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20996,"byte_end":21004,"line_start":671,"line_end":671,"column_start":12,"column_end":20},"name":"captures","qualname":"<Regex>::captures","value":"pub fn captures<'t>(&Self, &'t str) -> Result<Option<Captures>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the capture groups for the first match in `text`.","sig":null,"attributes":[{"value":"/ Returns the capture groups for the first match in `text`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20251,"byte_end":20312,"line_start":651,"line_end":651,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20317,"byte_end":20320,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ If no match is found, then `Ok(None)` is returned.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20325,"byte_end":20379,"line_start":653,"line_end":653,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20384,"byte_end":20387,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20392,"byte_end":20406,"line_start":655,"line_end":655,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20411,"byte_end":20414,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ Finding matches and capturing parts of the match:","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20419,"byte_end":20472,"line_start":657,"line_end":657,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20477,"byte_end":20480,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20485,"byte_end":20496,"line_start":659,"line_end":659,"column_start":5,"column_end":16}},{"value":"/ # use fancy_regex::Regex;","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20501,"byte_end":20530,"line_start":660,"line_end":660,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20535,"byte_end":20538,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ let re = Regex::new(r\"(\\d{4})-(\\d{2})-(\\d{2})\").unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20543,"byte_end":20604,"line_start":662,"line_end":662,"column_start":5,"column_end":66}},{"value":"/ let text = \"The date was 2018-04-07\";","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20609,"byte_end":20650,"line_start":663,"line_end":663,"column_start":5,"column_end":46}},{"value":"/ let captures = re.captures(text).unwrap().unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20655,"byte_end":20710,"line_start":664,"line_end":664,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20715,"byte_end":20718,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(captures.get(1).unwrap().as_str(), \"2018\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20723,"byte_end":20781,"line_start":666,"line_end":666,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(captures.get(2).unwrap().as_str(), \"04\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20786,"byte_end":20842,"line_start":667,"line_end":667,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(captures.get(3).unwrap().as_str(), \"07\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20847,"byte_end":20903,"line_start":668,"line_end":668,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(captures.get(0).unwrap().as_str(), \"2018-04-07\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20908,"byte_end":20972,"line_start":669,"line_end":669,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":20977,"byte_end":20984,"line_start":670,"line_end":670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":22334,"byte_end":22351,"line_start":709,"line_end":709,"column_start":12,"column_end":29},"name":"captures_from_pos","qualname":"<Regex>::captures_from_pos","value":"pub fn captures_from_pos<'t>(&Self, &'t str, usize)\n-> Result<Option<Captures>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the capture groups for the first match in `text`, starting from\n the specified byte position `pos`.","sig":null,"attributes":[{"value":"/ Returns the capture groups for the first match in `text`, starting from","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21116,"byte_end":21191,"line_start":675,"line_end":675,"column_start":5,"column_end":80}},{"value":"/ the specified byte position `pos`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21196,"byte_end":21234,"line_start":676,"line_end":676,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21239,"byte_end":21242,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21247,"byte_end":21261,"line_start":678,"line_end":678,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21266,"byte_end":21269,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ Finding captures starting at a position:","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21274,"byte_end":21318,"line_start":680,"line_end":680,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21323,"byte_end":21326,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21331,"byte_end":21338,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use fancy_regex::Regex;","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21343,"byte_end":21372,"line_start":683,"line_end":683,"column_start":5,"column_end":34}},{"value":"/ let re = Regex::new(r\"(?m:^)(\\d+)\").unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21377,"byte_end":21426,"line_start":684,"line_end":684,"column_start":5,"column_end":54}},{"value":"/ let text = \"1 test 123\\n2 foo\";","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21431,"byte_end":21466,"line_start":685,"line_end":685,"column_start":5,"column_end":40}},{"value":"/ let captures = re.captures_from_pos(text, 7).unwrap().unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21471,"byte_end":21538,"line_start":686,"line_end":686,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21543,"byte_end":21546,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ let group = captures.get(1).unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21551,"byte_end":21592,"line_start":688,"line_end":688,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(group.as_str(), \"2\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21597,"byte_end":21633,"line_start":689,"line_end":689,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(group.start(), 11);","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21638,"byte_end":21672,"line_start":690,"line_end":690,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(group.end(), 12);","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21677,"byte_end":21709,"line_start":691,"line_end":691,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21714,"byte_end":21721,"line_start":692,"line_end":692,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21726,"byte_end":21729,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ Note that in some cases this is not the same as using the `captures`","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21734,"byte_end":21806,"line_start":694,"line_end":694,"column_start":5,"column_end":77}},{"value":"/ method and passing a slice of the string, see the capture that we get","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21811,"byte_end":21884,"line_start":695,"line_end":695,"column_start":5,"column_end":78}},{"value":"/ when we do this:","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21889,"byte_end":21909,"line_start":696,"line_end":696,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21914,"byte_end":21917,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21922,"byte_end":21929,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ # use fancy_regex::Regex;","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21934,"byte_end":21963,"line_start":699,"line_end":699,"column_start":5,"column_end":34}},{"value":"/ let re = Regex::new(r\"(?m:^)(\\d+)\").unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":21968,"byte_end":22017,"line_start":700,"line_end":700,"column_start":5,"column_end":54}},{"value":"/ let text = \"1 test 123\\n2 foo\";","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":22022,"byte_end":22057,"line_start":701,"line_end":701,"column_start":5,"column_end":40}},{"value":"/ let captures = re.captures(&text[7..]).unwrap().unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":22062,"byte_end":22123,"line_start":702,"line_end":702,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(captures.get(1).unwrap().as_str(), \"123\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":22128,"byte_end":22185,"line_start":703,"line_end":703,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":22190,"byte_end":22197,"line_start":704,"line_end":704,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":22202,"byte_end":22205,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ This matched the number \"123\" because it's at the beginning of the text","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":22210,"byte_end":22285,"line_start":706,"line_end":706,"column_start":5,"column_end":80}},{"value":"/ of the string slice.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":22290,"byte_end":22314,"line_start":707,"line_end":707,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":22319,"byte_end":22322,"line_start":708,"line_end":708,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":23498,"byte_end":23510,"line_start":739,"line_end":739,"column_start":12,"column_end":24},"name":"captures_len","qualname":"<Regex>::captures_len","value":"pub fn captures_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of captures, including the implicit capture of the entire expression.\n","sig":null,"attributes":[{"value":"/ Returns the number of captures, including the implicit capture of the entire expression.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":23394,"byte_end":23486,"line_start":738,"line_end":738,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":23764,"byte_end":23777,"line_start":747,"line_end":747,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Regex>::capture_names","value":"pub fn capture_names(&Self) -> CaptureNames","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the capture names.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the capture names.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":23705,"byte_end":23752,"line_start":746,"line_end":746,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":24098,"byte_end":24109,"line_start":758,"line_end":758,"column_start":12,"column_end":23},"name":"debug_print","qualname":"<Regex>::debug_print","value":"pub fn debug_print(&Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28414,"byte_end":28421,"line_start":859,"line_end":859,"column_start":12,"column_end":19},"name":"replace","qualname":"<Regex>::replace","value":"pub fn replace<'t, R: Replacer>(&Self, &'t str, R) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Replaces the leftmost-first match with the replacement provided.\n The replacement can be a regular string (where `$N` and `$name` are\n expanded to match capture groups) or a function that takes the matches'\n `Captures` and returns the replaced string.","sig":null,"attributes":[{"value":"/ Replaces the leftmost-first match with the replacement provided.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":24311,"byte_end":24379,"line_start":765,"line_end":765,"column_start":5,"column_end":73}},{"value":"/ The replacement can be a regular string (where `$N` and `$name` are","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":24384,"byte_end":24455,"line_start":766,"line_end":766,"column_start":5,"column_end":76}},{"value":"/ expanded to match capture groups) or a function that takes the matches'","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":24460,"byte_end":24535,"line_start":767,"line_end":767,"column_start":5,"column_end":80}},{"value":"/ `Captures` and returns the replaced string.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":24540,"byte_end":24587,"line_start":768,"line_end":768,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":24592,"byte_end":24595,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ If no match is found, then a copy of the string is returned unchanged.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":24600,"byte_end":24674,"line_start":770,"line_end":770,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":24679,"byte_end":24682,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ # Replacement string syntax","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":24687,"byte_end":24718,"line_start":772,"line_end":772,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":24723,"byte_end":24726,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ All instances of `$name` in the replacement text is replaced with the","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":24731,"byte_end":24804,"line_start":774,"line_end":774,"column_start":5,"column_end":78}},{"value":"/ corresponding capture group `name`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":24809,"byte_end":24848,"line_start":775,"line_end":775,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":24853,"byte_end":24856,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ `name` may be an integer corresponding to the index of the","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":24861,"byte_end":24923,"line_start":777,"line_end":777,"column_start":5,"column_end":67}},{"value":"/ capture group (counted by order of opening parenthesis where `0` is the","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":24928,"byte_end":25003,"line_start":778,"line_end":778,"column_start":5,"column_end":80}},{"value":"/ entire match) or it can be a name (consisting of letters, digits or","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25008,"byte_end":25079,"line_start":779,"line_end":779,"column_start":5,"column_end":76}},{"value":"/ underscores) corresponding to a named capture group.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25084,"byte_end":25140,"line_start":780,"line_end":780,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25145,"byte_end":25148,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ If `name` isn't a valid capture group (whether the name doesn't exist","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25153,"byte_end":25226,"line_start":782,"line_end":782,"column_start":5,"column_end":78}},{"value":"/ or isn't a valid index), then it is replaced with the empty string.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25231,"byte_end":25302,"line_start":783,"line_end":783,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25307,"byte_end":25310,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ The longest possible name is used. e.g., `$1a` looks up the capture","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25315,"byte_end":25386,"line_start":785,"line_end":785,"column_start":5,"column_end":76}},{"value":"/ group named `1a` and not the capture group at index `1`. To exert more","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25391,"byte_end":25465,"line_start":786,"line_end":786,"column_start":5,"column_end":79}},{"value":"/ precise control over the name, use braces, e.g., `${1}a`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25470,"byte_end":25531,"line_start":787,"line_end":787,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25536,"byte_end":25539,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ To write a literal `$` use `$$`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25544,"byte_end":25580,"line_start":789,"line_end":789,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25585,"byte_end":25588,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25593,"byte_end":25607,"line_start":791,"line_end":791,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25612,"byte_end":25615,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ Note that this function is polymorphic with respect to the replacement.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25620,"byte_end":25695,"line_start":793,"line_end":793,"column_start":5,"column_end":80}},{"value":"/ In typical usage, this can just be a normal string:","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25700,"byte_end":25755,"line_start":794,"line_end":794,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25760,"byte_end":25763,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25768,"byte_end":25779,"line_start":796,"line_end":796,"column_start":5,"column_end":16}},{"value":"/ # use fancy_regex::Regex;","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25784,"byte_end":25813,"line_start":797,"line_end":797,"column_start":5,"column_end":34}},{"value":"/ let re = Regex::new(\"[^01]+\").unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25818,"byte_end":25861,"line_start":798,"line_end":798,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(re.replace(\"1078910\", \"\"), \"1010\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25866,"byte_end":25916,"line_start":799,"line_end":799,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25921,"byte_end":25928,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25933,"byte_end":25936,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ But anything satisfying the `Replacer` trait will work. For example,","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":25941,"byte_end":26013,"line_start":802,"line_end":802,"column_start":5,"column_end":77}},{"value":"/ a closure of type `|&Captures| -> String` provides direct access to the","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26018,"byte_end":26093,"line_start":803,"line_end":803,"column_start":5,"column_end":80}},{"value":"/ captures corresponding to a match. This allows one to access","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26098,"byte_end":26162,"line_start":804,"line_end":804,"column_start":5,"column_end":69}},{"value":"/ capturing group matches easily:","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26167,"byte_end":26202,"line_start":805,"line_end":805,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26207,"byte_end":26210,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26215,"byte_end":26226,"line_start":807,"line_end":807,"column_start":5,"column_end":16}},{"value":"/ # use fancy_regex::{Regex, Captures};","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26231,"byte_end":26272,"line_start":808,"line_end":808,"column_start":5,"column_end":46}},{"value":"/ let re = Regex::new(r\"([^,\\s]+),\\s+(\\S+)\").unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26277,"byte_end":26333,"line_start":809,"line_end":809,"column_start":5,"column_end":61}},{"value":"/ let result = re.replace(\"Springsteen, Bruce\", |caps: &Captures| {","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26338,"byte_end":26407,"line_start":810,"line_end":810,"column_start":5,"column_end":74}},{"value":"/     format!(\"{} {}\", &caps[2], &caps[1])","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26412,"byte_end":26456,"line_start":811,"line_end":811,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26461,"byte_end":26468,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(result, \"Bruce Springsteen\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26473,"byte_end":26517,"line_start":813,"line_end":813,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26522,"byte_end":26529,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26534,"byte_end":26537,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ But this is a bit cumbersome to use all the time. Instead, a simple","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26542,"byte_end":26613,"line_start":816,"line_end":816,"column_start":5,"column_end":76}},{"value":"/ syntax is supported that expands `$name` into the corresponding capture","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26618,"byte_end":26693,"line_start":817,"line_end":817,"column_start":5,"column_end":80}},{"value":"/ group. Here's the last example, but using this expansion technique","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26698,"byte_end":26768,"line_start":818,"line_end":818,"column_start":5,"column_end":75}},{"value":"/ with named capture groups:","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26773,"byte_end":26803,"line_start":819,"line_end":819,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26808,"byte_end":26811,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26816,"byte_end":26827,"line_start":821,"line_end":821,"column_start":5,"column_end":16}},{"value":"/ # use fancy_regex::Regex;","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26832,"byte_end":26861,"line_start":822,"line_end":822,"column_start":5,"column_end":34}},{"value":"/ let re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(?P<first>\\S+)\").unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26866,"byte_end":26939,"line_start":823,"line_end":823,"column_start":5,"column_end":78}},{"value":"/ let result = re.replace(\"Springsteen, Bruce\", \"$first $last\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":26944,"byte_end":27010,"line_start":824,"line_end":824,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(result, \"Bruce Springsteen\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27015,"byte_end":27059,"line_start":825,"line_end":825,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27064,"byte_end":27071,"line_start":826,"line_end":826,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27076,"byte_end":27079,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ Note that using `$2` instead of `$first` or `$1` instead of `$last`","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27084,"byte_end":27155,"line_start":828,"line_end":828,"column_start":5,"column_end":76}},{"value":"/ would produce the same result. To write a literal `$` use `$$`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27160,"byte_end":27227,"line_start":829,"line_end":829,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27232,"byte_end":27235,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ Sometimes the replacement string requires use of curly braces to","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27240,"byte_end":27308,"line_start":831,"line_end":831,"column_start":5,"column_end":73}},{"value":"/ delineate a capture group replacement and surrounding literal text.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27313,"byte_end":27384,"line_start":832,"line_end":832,"column_start":5,"column_end":76}},{"value":"/ For example, if we wanted to join two words together with an","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27389,"byte_end":27453,"line_start":833,"line_end":833,"column_start":5,"column_end":69}},{"value":"/ underscore:","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27458,"byte_end":27473,"line_start":834,"line_end":834,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27478,"byte_end":27481,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27486,"byte_end":27497,"line_start":836,"line_end":836,"column_start":5,"column_end":16}},{"value":"/ # use fancy_regex::Regex;","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27502,"byte_end":27531,"line_start":837,"line_end":837,"column_start":5,"column_end":34}},{"value":"/ let re = Regex::new(r\"(?P<first>\\w+)\\s+(?P<second>\\w+)\").unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27536,"byte_end":27606,"line_start":838,"line_end":838,"column_start":5,"column_end":75}},{"value":"/ let result = re.replace(\"deep fried\", \"${first}_$second\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27611,"byte_end":27673,"line_start":839,"line_end":839,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(result, \"deep_fried\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27678,"byte_end":27715,"line_start":840,"line_end":840,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27720,"byte_end":27727,"line_start":841,"line_end":841,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27732,"byte_end":27735,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ Without the curly braces, the capture group name `first_` would be","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27740,"byte_end":27810,"line_start":843,"line_end":843,"column_start":5,"column_end":75}},{"value":"/ used, and since it doesn't exist, it would be replaced with the empty","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27815,"byte_end":27888,"line_start":844,"line_end":844,"column_start":5,"column_end":78}},{"value":"/ string.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27893,"byte_end":27904,"line_start":845,"line_end":845,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27909,"byte_end":27912,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ Finally, sometimes you just want to replace a literal string with no","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27917,"byte_end":27989,"line_start":847,"line_end":847,"column_start":5,"column_end":77}},{"value":"/ regard for capturing group expansion. This can be done by wrapping a","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":27994,"byte_end":28066,"line_start":848,"line_end":848,"column_start":5,"column_end":77}},{"value":"/ byte string with `NoExpand`:","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28071,"byte_end":28103,"line_start":849,"line_end":849,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28108,"byte_end":28111,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28116,"byte_end":28127,"line_start":851,"line_end":851,"column_start":5,"column_end":16}},{"value":"/ # use fancy_regex::Regex;","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28132,"byte_end":28161,"line_start":852,"line_end":852,"column_start":5,"column_end":34}},{"value":"/ use fancy_regex::NoExpand;","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28166,"byte_end":28196,"line_start":853,"line_end":853,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28201,"byte_end":28204,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ let re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(\\S+)\").unwrap();","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28209,"byte_end":28273,"line_start":855,"line_end":855,"column_start":5,"column_end":69}},{"value":"/ let result = re.replace(\"Springsteen, Bruce\", NoExpand(\"$2 $last\"));","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28278,"byte_end":28350,"line_start":856,"line_end":856,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(result, \"$2 $last\");","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28355,"byte_end":28390,"line_start":857,"line_end":857,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28395,"byte_end":28402,"line_start":858,"line_end":858,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28847,"byte_end":28858,"line_start":869,"line_end":869,"column_start":12,"column_end":23},"name":"replace_all","qualname":"<Regex>::replace_all","value":"pub fn replace_all<'t, R: Replacer>(&Self, &'t str, R) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Replaces all non-overlapping matches in `text` with the replacement\n provided. This is the same as calling `replacen` with `limit` set to\n `0`.","sig":null,"attributes":[{"value":"/ Replaces all non-overlapping matches in `text` with the replacement","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28534,"byte_end":28605,"line_start":863,"line_end":863,"column_start":5,"column_end":76}},{"value":"/ provided. This is the same as calling `replacen` with `limit` set to","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28610,"byte_end":28682,"line_start":864,"line_end":864,"column_start":5,"column_end":77}},{"value":"/ `0`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28687,"byte_end":28695,"line_start":865,"line_end":865,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28700,"byte_end":28703,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ See the documentation for `replace` for details on how to access","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28708,"byte_end":28776,"line_start":867,"line_end":867,"column_start":5,"column_end":73}},{"value":"/ capturing group matches in the replacement string.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28781,"byte_end":28835,"line_start":868,"line_end":868,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":29296,"byte_end":29304,"line_start":879,"line_end":879,"column_start":12,"column_end":20},"name":"replacen","qualname":"<Regex>::replacen","value":"pub fn replacen<'t, R: Replacer>(&Self, &'t str, usize, R) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Replaces at most `limit` non-overlapping matches in `text` with the\n replacement provided. If `limit` is 0, then all non-overlapping matches\n are replaced.","sig":null,"attributes":[{"value":"/ Replaces at most `limit` non-overlapping matches in `text` with the","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":28971,"byte_end":29042,"line_start":873,"line_end":873,"column_start":5,"column_end":76}},{"value":"/ replacement provided. If `limit` is 0, then all non-overlapping matches","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":29047,"byte_end":29122,"line_start":874,"line_end":874,"column_start":5,"column_end":80}},{"value":"/ are replaced.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":29127,"byte_end":29144,"line_start":875,"line_end":875,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":29149,"byte_end":29152,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ See the documentation for `replace` for details on how to access","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":29157,"byte_end":29225,"line_start":877,"line_end":877,"column_start":5,"column_end":73}},{"value":"/ capturing group matches in the replacement string.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":29230,"byte_end":29284,"line_start":878,"line_end":878,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":31603,"byte_end":31608,"line_start":941,"line_end":941,"column_start":12,"column_end":17},"name":"start","qualname":"<Match>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting byte offset of the match in the text.\n","sig":null,"attributes":[{"value":"/ Returns the starting byte offset of the match in the text.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":31515,"byte_end":31577,"line_start":939,"line_end":939,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":31582,"byte_end":31591,"line_start":940,"line_end":940,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":31743,"byte_end":31746,"line_start":947,"line_end":947,"column_start":12,"column_end":15},"name":"end","qualname":"<Match>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the ending byte offset of the match in the text.\n","sig":null,"attributes":[{"value":"/ Returns the ending byte offset of the match in the text.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":31657,"byte_end":31717,"line_start":945,"line_end":945,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":31722,"byte_end":31731,"line_start":946,"line_end":946,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":31904,"byte_end":31909,"line_start":953,"line_end":953,"column_start":12,"column_end":17},"name":"range","qualname":"<Match>::range","value":"pub fn range(&Self) -> Range<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the range over the starting and ending byte offsets of the match in text.\n","sig":null,"attributes":[{"value":"/ Returns the range over the starting and ending byte offsets of the match in text.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":31793,"byte_end":31878,"line_start":951,"line_end":951,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":31883,"byte_end":31892,"line_start":952,"line_end":952,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":32030,"byte_end":32036,"line_start":959,"line_end":959,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Match>::as_str","value":"pub fn as_str(&Self) -> &'t str","parent":null,"children":[],"decl_id":null,"docs":" Returns the matched text.\n","sig":null,"attributes":[{"value":"/ Returns the matched text.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":31975,"byte_end":32004,"line_start":957,"line_end":957,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":32009,"byte_end":32018,"line_start":958,"line_end":958,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":32818,"byte_end":32821,"line_start":987,"line_end":987,"column_start":12,"column_end":15},"name":"get","qualname":"<Captures>::get","value":"pub fn get(&Self, usize) -> Option<Match>","parent":null,"children":[],"decl_id":null,"docs":" Get the capture group by its index in the regex.","sig":null,"attributes":[{"value":"/ Get the capture group by its index in the regex.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":32592,"byte_end":32644,"line_start":983,"line_end":983,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":32649,"byte_end":32652,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ If there is no match for that group or the index does not correspond to a group, `None` is","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":32657,"byte_end":32751,"line_start":985,"line_end":985,"column_start":5,"column_end":99}},{"value":"/ returned. The index 0 returns the whole match.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":32756,"byte_end":32806,"line_start":986,"line_end":986,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":33769,"byte_end":33773,"line_start":1015,"line_end":1015,"column_start":12,"column_end":16},"name":"name","qualname":"<Captures>::name","value":"pub fn name(&Self, &str) -> Option<Match>","parent":null,"children":[],"decl_id":null,"docs":" Returns the match for a named capture group.  Returns `None` the capture\n group did not match or if there is no group with the given name.\n","sig":null,"attributes":[{"value":"/ Returns the match for a named capture group.  Returns `None` the capture","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":33608,"byte_end":33684,"line_start":1013,"line_end":1013,"column_start":5,"column_end":81}},{"value":"/ group did not match or if there is no group with the given name.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":33689,"byte_end":33757,"line_start":1014,"line_end":1014,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34911,"byte_end":34917,"line_start":1039,"line_end":1039,"column_start":12,"column_end":18},"name":"expand","qualname":"<Captures>::expand","value":"pub fn expand(&Self, &str, &mut String)","parent":null,"children":[],"decl_id":null,"docs":" Expands all instances of `$group` in `replacement` to the corresponding\n capture group `name`, and writes them to the `dst` buffer given.","sig":null,"attributes":[{"value":"/ Expands all instances of `$group` in `replacement` to the corresponding","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":33890,"byte_end":33965,"line_start":1019,"line_end":1019,"column_start":5,"column_end":80}},{"value":"/ capture group `name`, and writes them to the `dst` buffer given.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":33970,"byte_end":34038,"line_start":1020,"line_end":1020,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34043,"byte_end":34046,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ `group` may be an integer corresponding to the index of the","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34051,"byte_end":34114,"line_start":1022,"line_end":1022,"column_start":5,"column_end":68}},{"value":"/ capture group (counted by order of opening parenthesis where `\\0` is the","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34119,"byte_end":34195,"line_start":1023,"line_end":1023,"column_start":5,"column_end":81}},{"value":"/ entire match) or it can be a name (consisting of letters, digits or","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34200,"byte_end":34271,"line_start":1024,"line_end":1024,"column_start":5,"column_end":76}},{"value":"/ underscores) corresponding to a named capture group.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34276,"byte_end":34332,"line_start":1025,"line_end":1025,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34337,"byte_end":34340,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ If `group` isn't a valid capture group (whether the name doesn't exist","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34345,"byte_end":34419,"line_start":1027,"line_end":1027,"column_start":5,"column_end":79}},{"value":"/ or isn't a valid index), then it is replaced with the empty string.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34424,"byte_end":34495,"line_start":1028,"line_end":1028,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34500,"byte_end":34503,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ The longest possible name is used. e.g., `$1a` looks up the capture","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34508,"byte_end":34579,"line_start":1030,"line_end":1030,"column_start":5,"column_end":76}},{"value":"/ group named `1a` and not the capture group at index `1`. To exert more","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34584,"byte_end":34658,"line_start":1031,"line_end":1031,"column_start":5,"column_end":79}},{"value":"/ precise control over the name, use braces, e.g., `${1}a`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34663,"byte_end":34724,"line_start":1032,"line_end":1032,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34729,"byte_end":34732,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ To write a literal `$`, use `$$`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34737,"byte_end":34774,"line_start":1034,"line_end":1034,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34779,"byte_end":34782,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ For more control over expansion, see [`Expander`].","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34787,"byte_end":34841,"line_start":1036,"line_end":1036,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34846,"byte_end":34849,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ [`Expander`]: expand/struct.Expander.html","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":34854,"byte_end":34899,"line_start":1038,"line_end":1038,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":35197,"byte_end":35201,"line_start":1045,"line_end":1045,"column_start":12,"column_end":16},"name":"iter","qualname":"<Captures>::iter","value":"pub fn iter<'c>(&'c Self) -> SubCaptureMatches","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the captured groups in order in which they appeared in the regex. The first\n capture corresponds to the whole match.\n","sig":null,"attributes":[{"value":"/ Iterate over the captured groups in order in which they appeared in the regex. The first","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":35045,"byte_end":35137,"line_start":1043,"line_end":1043,"column_start":5,"column_end":97}},{"value":"/ capture corresponds to the whole match.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":35142,"byte_end":35185,"line_start":1044,"line_end":1044,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":35426,"byte_end":35429,"line_start":1051,"line_end":1051,"column_start":12,"column_end":15},"name":"len","qualname":"<Captures>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" How many groups were captured. This is always at least 1 because group 0 returns the whole\n match.\n","sig":null,"attributes":[{"value":"/ How many groups were captured. This is always at least 1 because group 0 returns the whole","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":35305,"byte_end":35399,"line_start":1049,"line_end":1049,"column_start":5,"column_end":99}},{"value":"/ match.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":35404,"byte_end":35414,"line_start":1050,"line_end":1050,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":884},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":37561,"byte_end":37566,"line_start":1126,"line_end":1126,"column_start":5,"column_end":10},"name":"Empty","qualname":"::Expr::Empty","value":"Expr::Empty","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" An empty expression, e.g. the last branch in `(a|b|)`\n","sig":null,"attributes":[{"value":"/ An empty expression, e.g. the last branch in `(a|b|)`","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":37499,"byte_end":37556,"line_start":1125,"line_end":1125,"column_start":5,"column_end":62}}]},{"kind":"StructVariant","id":{"krate":0,"index":886},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":37605,"byte_end":37608,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8},"name":"Any","qualname":"::Expr::Any","value":"Expr::Any { newline }","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" Any character, regex `.`\n","sig":null,"attributes":[{"value":"/ Any character, regex `.`","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":37572,"byte_end":37600,"line_start":1127,"line_end":1127,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":888},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":37725,"byte_end":37734,"line_start":1133,"line_end":1133,"column_start":5,"column_end":14},"name":"StartText","qualname":"::Expr::StartText","value":"Expr::StartText","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" Start of input text\n","sig":null,"attributes":[{"value":"/ Start of input text","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":37697,"byte_end":37720,"line_start":1132,"line_end":1132,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":890},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":37766,"byte_end":37773,"line_start":1135,"line_end":1135,"column_start":5,"column_end":12},"name":"EndText","qualname":"::Expr::EndText","value":"Expr::EndText","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" End of input text\n","sig":null,"attributes":[{"value":"/ End of input text","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":37740,"byte_end":37761,"line_start":1134,"line_end":1134,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":892},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":37803,"byte_end":37812,"line_start":1137,"line_end":1137,"column_start":5,"column_end":14},"name":"StartLine","qualname":"::Expr::StartLine","value":"Expr::StartLine","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" Start of a line\n","sig":null,"attributes":[{"value":"/ Start of a line","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":37779,"byte_end":37798,"line_start":1136,"line_end":1136,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":894},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":37840,"byte_end":37847,"line_start":1139,"line_end":1139,"column_start":5,"column_end":12},"name":"EndLine","qualname":"::Expr::EndLine","value":"Expr::EndLine","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" End of a line\n","sig":null,"attributes":[{"value":"/ End of a line","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":37818,"byte_end":37835,"line_start":1138,"line_end":1138,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":896},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":37895,"byte_end":37902,"line_start":1141,"line_end":1141,"column_start":5,"column_end":12},"name":"Literal","qualname":"::Expr::Literal","value":"Expr::Literal { val, casei }","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" The string as a literal, e.g. `a`\n","sig":null,"attributes":[{"value":"/ The string as a literal, e.g. `a`","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":37853,"byte_end":37890,"line_start":1140,"line_end":1140,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":899},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":38193,"byte_end":38199,"line_start":1149,"line_end":1149,"column_start":5,"column_end":11},"name":"Concat","qualname":"::Expr::Concat","value":"Expr::Concat(Vec<Expr>)","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" Concatenation of multiple expressions, must match in order, e.g. `a.` is a concatenation of\n the literal `a` and `.` for any character\n","sig":null,"attributes":[{"value":"/ Concatenation of multiple expressions, must match in order, e.g. `a.` is a concatenation of","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":38043,"byte_end":38138,"line_start":1147,"line_end":1147,"column_start":5,"column_end":100}},{"value":"/ the literal `a` and `.` for any character","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":38143,"byte_end":38188,"line_start":1148,"line_end":1148,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":902},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":38369,"byte_end":38372,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8},"name":"Alt","qualname":"::Expr::Alt","value":"Expr::Alt(Vec<Expr>)","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" Alternative of multiple expressions, one of them must match, e.g. `a|b` is an alternative\n where either the literal `a` or `b` must match\n","sig":null,"attributes":[{"value":"/ Alternative of multiple expressions, one of them must match, e.g. `a|b` is an alternative","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":38216,"byte_end":38309,"line_start":1150,"line_end":1150,"column_start":5,"column_end":98}},{"value":"/ where either the literal `a` or `b` must match","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":38314,"byte_end":38364,"line_start":1151,"line_end":1151,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":905},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":38515,"byte_end":38520,"line_start":1155,"line_end":1155,"column_start":5,"column_end":10},"name":"Group","qualname":"::Expr::Group","value":"Expr::Group(Box<Expr>)","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" Capturing group of expression, e.g. `(a.)` matches `a` and any character and \"captures\"\n (remembers) the match\n","sig":null,"attributes":[{"value":"/ Capturing group of expression, e.g. `(a.)` matches `a` and any character and \"captures\"","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":38389,"byte_end":38480,"line_start":1153,"line_end":1153,"column_start":5,"column_end":96}},{"value":"/ (remembers) the match","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":38485,"byte_end":38510,"line_start":1154,"line_end":1154,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":908},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":38718,"byte_end":38728,"line_start":1158,"line_end":1158,"column_start":5,"column_end":15},"name":"LookAround","qualname":"::Expr::LookAround","value":"Expr::LookAround(Box<Expr>, LookAround)","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" Look-around (e.g. positive/negative look-ahead or look-behind) with an expression, e.g.\n `(?=a)` means the next character must be `a` (but the match is not consumed)\n","sig":null,"attributes":[{"value":"/ Look-around (e.g. positive/negative look-ahead or look-behind) with an expression, e.g.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":38537,"byte_end":38628,"line_start":1156,"line_end":1156,"column_start":5,"column_end":96}},{"value":"/ `(?=a)` means the next character must be `a` (but the match is not consumed)","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":38633,"byte_end":38713,"line_start":1157,"line_end":1157,"column_start":5,"column_end":85}}]},{"kind":"StructVariant","id":{"krate":0,"index":912},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":38820,"byte_end":38826,"line_start":1160,"line_end":1160,"column_start":5,"column_end":11},"name":"Repeat","qualname":"::Expr::Repeat","value":"Expr::Repeat { child, lo, hi, greedy }","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" Repeat of an expression, e.g. `a*` or `a+` or `a{1,3}`\n","sig":null,"attributes":[{"value":"/ Repeat of an expression, e.g. `a*` or `a+` or `a{1,3}`","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":38757,"byte_end":38815,"line_start":1159,"line_end":1159,"column_start":5,"column_end":63}}]},{"kind":"StructVariant","id":{"krate":0,"index":917},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":39455,"byte_end":39463,"line_start":1173,"line_end":1173,"column_start":5,"column_end":13},"name":"Delegate","qualname":"::Expr::Delegate","value":"Expr::Delegate { inner, size, casei }","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" Delegate a regex to the regex crate. This is used as a simplification so that we don't have\n to represent all the expressions in the AST, e.g. character classes.\n","sig":null,"attributes":[{"value":"/ Delegate a regex to the regex crate. This is used as a simplification so that we don't have","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":39278,"byte_end":39373,"line_start":1171,"line_end":1171,"column_start":5,"column_end":100}},{"value":"/ to represent all the expressions in the AST, e.g. character classes.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":39378,"byte_end":39450,"line_start":1172,"line_end":1172,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":921},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":39874,"byte_end":39881,"line_start":1183,"line_end":1183,"column_start":5,"column_end":12},"name":"Backref","qualname":"::Expr::Backref","value":"Expr::Backref(usize)","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" Back reference to a capture group, e.g. `\\1` in `(abc|def)\\1` references the captured group\n and the whole regex matches either `abcabc` or `defdef`.\n","sig":null,"attributes":[{"value":"/ Back reference to a capture group, e.g. `\\1` in `(abc|def)\\1` references the captured group","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":39709,"byte_end":39804,"line_start":1181,"line_end":1181,"column_start":5,"column_end":100}},{"value":"/ and the whole regex matches either `abcabc` or `defdef`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":39809,"byte_end":39869,"line_start":1182,"line_end":1182,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":924},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":39943,"byte_end":39955,"line_start":1185,"line_end":1185,"column_start":5,"column_end":17},"name":"NamedBackref","qualname":"::Expr::NamedBackref","value":"Expr::NamedBackref(String)","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" Back reference to a named capture group.\n","sig":null,"attributes":[{"value":"/ Back reference to a named capture group.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":39894,"byte_end":39938,"line_start":1184,"line_end":1184,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":927},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40152,"byte_end":40163,"line_start":1188,"line_end":1188,"column_start":5,"column_end":16},"name":"AtomicGroup","qualname":"::Expr::AtomicGroup","value":"Expr::AtomicGroup(Box<Expr>)","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" Atomic non-capturing group, e.g. `(?>ab|a)` in text that contains `ab` will match `ab` and\n never backtrack and try `a`, even if matching fails after the atomic group.\n","sig":null,"attributes":[{"value":"/ Atomic non-capturing group, e.g. `(?>ab|a)` in text that contains `ab` will match `ab` and","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":39969,"byte_end":40063,"line_start":1186,"line_end":1186,"column_start":5,"column_end":99}},{"value":"/ never backtrack and try `a`, even if matching fails after the atomic group.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40068,"byte_end":40147,"line_start":1187,"line_end":1187,"column_start":5,"column_end":84}}]},{"kind":"Enum","id":{"krate":0,"index":883},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":37488,"byte_end":37492,"line_start":1124,"line_end":1124,"column_start":10,"column_end":14},"name":"Expr","qualname":"::Expr","value":"pub enum Expr {\n    Empty,\n    Any {\n        newline: bool,\n    },\n    StartText,\n    EndText,\n    StartLine,\n    EndLine,\n    Literal {\n        val: String,\n        casei: bool,\n    },\n    Concat(Vec<Expr>),\n    Alt(Vec<Expr>),\n    Group(Box<Expr>),\n    LookAround(Box<Expr>, LookAround),\n    Repeat {\n        child: Box<Expr>,\n        lo: usize,\n        hi: usize,\n        greedy: bool,\n    },\n    Delegate {\n        inner: String,\n        size: usize,\n        casei: bool,\n    },\n    Backref(usize),\n    NamedBackref(String),\n    AtomicGroup(Box<Expr>),\n}","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":912},{"krate":0,"index":917},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927}],"decl_id":null,"docs":" Regular expression AST. This is public for now but may change.\n","sig":null,"attributes":[{"value":"/ Regular expression AST. This is public for now but may change.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":37380,"byte_end":37446,"line_start":1122,"line_end":1122,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":940},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40365,"byte_end":40374,"line_start":1195,"line_end":1195,"column_start":5,"column_end":14},"name":"LookAhead","qualname":"::LookAround::LookAhead","value":"LookAround::LookAhead","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Look-ahead assertion, e.g. `(?=a)`\n","sig":null,"attributes":[{"value":"/ Look-ahead assertion, e.g. `(?=a)`","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40322,"byte_end":40360,"line_start":1194,"line_end":1194,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":942},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40432,"byte_end":40444,"line_start":1197,"line_end":1197,"column_start":5,"column_end":17},"name":"LookAheadNeg","qualname":"::LookAround::LookAheadNeg","value":"LookAround::LookAheadNeg","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Negative look-ahead assertion, e.g. `(?!a)`\n","sig":null,"attributes":[{"value":"/ Negative look-ahead assertion, e.g. `(?!a)`","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40380,"byte_end":40427,"line_start":1196,"line_end":1196,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":944},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40495,"byte_end":40505,"line_start":1199,"line_end":1199,"column_start":5,"column_end":15},"name":"LookBehind","qualname":"::LookAround::LookBehind","value":"LookAround::LookBehind","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Look-behind assertion, e.g. `(?<=a)`\n","sig":null,"attributes":[{"value":"/ Look-behind assertion, e.g. `(?<=a)`","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40450,"byte_end":40490,"line_start":1198,"line_end":1198,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":946},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40565,"byte_end":40578,"line_start":1201,"line_end":1201,"column_start":5,"column_end":18},"name":"LookBehindNeg","qualname":"::LookAround::LookBehindNeg","value":"LookAround::LookBehindNeg","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Negative look-behind assertion, e.g. `(?<!a)`\n","sig":null,"attributes":[{"value":"/ Negative look-behind assertion, e.g. `(?<!a)`","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40511,"byte_end":40560,"line_start":1200,"line_end":1200,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":939},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40305,"byte_end":40315,"line_start":1193,"line_end":1193,"column_start":10,"column_end":20},"name":"LookAround","qualname":"::LookAround","value":"pub enum LookAround { LookAhead, LookAheadNeg, LookBehind, LookBehindNeg, }","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":946}],"decl_id":null,"docs":" Type of look-around assertion as used for a look-around expression.\n","sig":null,"attributes":[{"value":"/ Type of look-around assertion as used for a look-around expression.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40179,"byte_end":40250,"line_start":1191,"line_end":1191,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":544},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40824,"byte_end":40836,"line_start":1208,"line_end":1208,"column_start":12,"column_end":24},"name":"CaptureNames","qualname":"::CaptureNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over capture names in a [Regex].  The iterator\n returns the name of each group, or [None] if the group has\n no name.  Because capture group 0 cannot have a name, the\n first item returned is always [None].\n","sig":null,"attributes":[{"value":"/ An iterator over capture names in a [Regex].  The iterator","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40583,"byte_end":40645,"line_start":1204,"line_end":1204,"column_start":1,"column_end":63}},{"value":"/ returns the name of each group, or [None] if the group has","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40646,"byte_end":40708,"line_start":1205,"line_end":1205,"column_start":1,"column_end":63}},{"value":"/ no name.  Because capture group 0 cannot have a name, the","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40709,"byte_end":40770,"line_start":1206,"line_end":1206,"column_start":1,"column_end":62}},{"value":"/ first item returned is always [None].","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40771,"byte_end":40812,"line_start":1207,"line_end":1207,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":557},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":41958,"byte_end":41964,"line_start":1254,"line_end":1254,"column_start":8,"column_end":14},"name":"escape","qualname":"::escape","value":"pub fn escape(&str) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Escapes special characters in `text` with '\\\\'.  Returns a string which, when interpreted\n as a regex, matches exactly `text`.\n","sig":null,"attributes":[{"value":"/ Escapes special characters in `text` with '\\\\'.  Returns a string which, when interpreted","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":41817,"byte_end":41910,"line_start":1252,"line_end":1252,"column_start":1,"column_end":94}},{"value":"/ as a regex, matches exactly `text`.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":41911,"byte_end":41950,"line_start":1253,"line_end":1253,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":42577,"byte_end":42587,"line_start":1270,"line_end":1270,"column_start":12,"column_end":22},"name":"parse_tree","qualname":"<Expr>::parse_tree","value":"pub fn parse_tree(&str) -> Result<ExprTree>","parent":null,"children":[],"decl_id":null,"docs":" Parse the regex and return an expression (AST) and a bit set with the indexes of groups\n that are referenced by backrefs.\n","sig":null,"attributes":[{"value":"/ Parse the regex and return an expression (AST) and a bit set with the indexes of groups","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":42433,"byte_end":42524,"line_start":1268,"line_end":1268,"column_start":5,"column_end":96}},{"value":"/ that are referenced by backrefs.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":42529,"byte_end":42565,"line_start":1269,"line_end":1269,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":42861,"byte_end":42867,"line_start":1279,"line_end":1279,"column_start":12,"column_end":18},"name":"to_str","qualname":"<Expr>::to_str","value":"pub fn to_str(&Self, &mut String, u8)","parent":null,"children":[],"decl_id":null,"docs":" Convert expression to a regex string in the regex crate's syntax.","sig":null,"attributes":[{"value":"/ Convert expression to a regex string in the regex crate's syntax.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":42657,"byte_end":42726,"line_start":1274,"line_end":1274,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":42731,"byte_end":42734,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":42739,"byte_end":42751,"line_start":1276,"line_end":1276,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":42756,"byte_end":42759,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ Panics for expressions that are hard, i.e. can not be handled by the regex crate.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":42764,"byte_end":42849,"line_start":1278,"line_end":1278,"column_start":5,"column_end":90}}]},{"kind":"Mod","id":{"krate":0,"index":567},"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":48361,"byte_end":48369,"line_start":1458,"line_end":1458,"column_start":9,"column_end":17},"name":"internal","qualname":"::internal","value":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":584}],"decl_id":null,"docs":" The internal module only exists so that the toy example can access internals for debugging and\n experimenting.\n","sig":null,"attributes":[{"value":"/ The internal module only exists so that the toy example can access internals for debugging and","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":48220,"byte_end":48318,"line_start":1455,"line_end":1455,"column_start":1,"column_end":99}},{"value":"/ experimenting.","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":48319,"byte_end":48337,"line_start":1456,"line_end":1456,"column_start":1,"column_end":19}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/analyze.rs","byte_start":53876,"byte_end":53880,"line_start":50,"line_end":50,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/analyze.rs","byte_start":54698,"byte_end":54706,"line_start":79,"line_end":79,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/compile.rs","byte_start":62917,"byte_end":62926,"line_start":41,"line_end":41,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/compile.rs","byte_start":64497,"byte_end":64505,"line_start":99,"line_end":99,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/compile.rs","byte_start":76998,"byte_end":77013,"line_start":467,"line_end":467,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":85632,"byte_end":85637,"line_start":64,"line_end":64,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":85664,"byte_end":85669,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":88237,"byte_end":88245,"line_start":17,"line_end":17,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":88567,"byte_end":88575,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/parse.rs","byte_start":97783,"byte_end":97789,"line_start":62,"line_end":62,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140908,"byte_end":140919,"line_start":63,"line_end":63,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":141660,"byte_end":141666,"line_start":92,"line_end":92,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":141913,"byte_end":141916,"line_start":102,"line_end":102,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":142616,"byte_end":142617,"line_start":131,"line_end":131,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":143291,"byte_end":143299,"line_start":152,"line_end":152,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":150934,"byte_end":150938,"line_start":194,"line_end":194,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":152436,"byte_end":152441,"line_start":245,"line_end":245,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":6455,"byte_end":6462,"line_start":226,"line_end":226,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":6702,"byte_end":6709,"line_start":238,"line_end":238,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":8244,"byte_end":8258,"line_start":284,"line_end":284,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":8502,"byte_end":8516,"line_start":296,"line_end":296,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":10276,"byte_end":10288,"line_start":364,"line_end":364,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":10523,"byte_end":10535,"line_start":375,"line_end":375,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":12664,"byte_end":12669,"line_start":425,"line_end":425,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":12852,"byte_end":12857,"line_start":432,"line_end":432,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":13029,"byte_end":13034,"line_start":439,"line_end":439,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":13201,"byte_end":13206,"line_start":448,"line_end":448,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":31499,"byte_end":31504,"line_start":938,"line_end":938,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":32417,"byte_end":32422,"line_start":975,"line_end":975,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":32573,"byte_end":32581,"line_start":982,"line_end":982,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":36048,"byte_end":36056,"line_start":1072,"line_end":1072,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":36744,"byte_end":36752,"line_start":1096,"line_end":1096,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":36998,"byte_end":37015,"line_start":1106,"line_end":1106,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40895,"byte_end":40907,"line_start":1210,"line_end":1210,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":41046,"byte_end":41058,"line_start":1216,"line_end":1216,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":42422,"byte_end":42426,"line_start":1267,"line_end":1267,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/analyze.rs","byte_start":53876,"byte_end":53880,"line_start":50,"line_end":50,"column_start":10,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/analyze.rs","byte_start":54698,"byte_end":54706,"line_start":79,"line_end":79,"column_start":10,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":60},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/compile.rs","byte_start":62917,"byte_end":62926,"line_start":41,"line_end":41,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/compile.rs","byte_start":64497,"byte_end":64505,"line_start":99,"line_end":99,"column_start":6,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/compile.rs","byte_start":76998,"byte_end":77013,"line_start":467,"line_end":467,"column_start":6,"column_end":21},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":85632,"byte_end":85637,"line_start":64,"line_end":64,"column_start":30,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/error.rs","byte_start":85664,"byte_end":85669,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":88237,"byte_end":88245,"line_start":17,"line_end":17,"column_start":18,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":651},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/expand.rs","byte_start":88567,"byte_end":88575,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/parse.rs","byte_start":97783,"byte_end":97789,"line_start":62,"line_end":62,"column_start":10,"column_end":16},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":140908,"byte_end":140919,"line_start":63,"line_end":63,"column_start":50,"column_end":61},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":675},"to":{"krate":0,"index":296}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":141660,"byte_end":141666,"line_start":92,"line_end":92,"column_start":19,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":296}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":141913,"byte_end":141916,"line_start":102,"line_end":102,"column_start":23,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":546},"to":{"krate":0,"index":296}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":142616,"byte_end":142617,"line_start":131,"line_end":131,"column_start":25,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":327},"to":{"krate":0,"index":296}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/replacer.rs","byte_start":143291,"byte_end":143299,"line_start":152,"line_end":152,"column_start":23,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":684},"to":{"krate":0,"index":296}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":150934,"byte_end":150938,"line_start":194,"line_end":194,"column_start":6,"column_end":10},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/vm.rs","byte_start":152436,"byte_end":152441,"line_start":245,"line_end":245,"column_start":6,"column_end":11},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":6455,"byte_end":6462,"line_start":226,"line_end":226,"column_start":14,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":6702,"byte_end":6709,"line_start":238,"line_end":238,"column_start":27,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":827},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":8244,"byte_end":8258,"line_start":284,"line_end":284,"column_start":14,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":8502,"byte_end":8516,"line_start":296,"line_end":296,"column_start":27,"column_end":41},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":838},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":10276,"byte_end":10288,"line_start":364,"line_end":364,"column_start":18,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":874},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":10523,"byte_end":10535,"line_start":375,"line_end":375,"column_start":6,"column_end":18},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":12664,"byte_end":12669,"line_start":425,"line_end":425,"column_start":21,"column_end":26},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":788},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":12852,"byte_end":12857,"line_start":432,"line_end":432,"column_start":23,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":788},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":13029,"byte_end":13034,"line_start":439,"line_end":439,"column_start":18,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":788},"to":{"krate":2,"index":11819}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":13201,"byte_end":13206,"line_start":448,"line_end":448,"column_start":6,"column_end":11},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":31499,"byte_end":31504,"line_start":938,"line_end":938,"column_start":10,"column_end":15},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":32417,"byte_end":32422,"line_start":975,"line_end":975,"column_start":30,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":2,"index":41731},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":32573,"byte_end":32581,"line_start":982,"line_end":982,"column_start":10,"column_end":18},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":36048,"byte_end":36056,"line_start":1072,"line_end":1072,"column_start":27,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":36744,"byte_end":36752,"line_start":1096,"line_end":1096,"column_start":33,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":36998,"byte_end":37015,"line_start":1106,"line_end":1106,"column_start":27,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":40895,"byte_end":40907,"line_start":1210,"line_end":1210,"column_start":16,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":544},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":41046,"byte_end":41058,"line_start":1216,"line_end":1216,"column_start":23,"column_end":35},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":544},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/fancy-regex-0.7.1/src/lib.rs","byte_start":42422,"byte_end":42426,"line_start":1267,"line_end":1267,"column_start":6,"column_end":10},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":883},"to":{"krate":4294967295,"index":4294967295}}]}