{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./bible.service\";\nimport * as i2 from \"@angular/router\";\nexport let HistoryService = /*#__PURE__*/(() => {\n  class HistoryService {\n    constructor(bibleService, router) {\n      this.bibleService = bibleService;\n      this.router = router;\n    }\n\n    menuBooks() {\n      this.curTheme = localStorage.getItem('theme');\n      this.curBookMenu = this.bibleService.bible[Number(localStorage.getItem('curTestamentIndex'))].books[Number(localStorage.getItem('curBookIndex'))].bookName + ' ' + localStorage.getItem('curChap');\n\n      if (localStorage.getItem('secTestamentIndex') != null) {\n        this.secBookMenu = this.bibleService.bible[Number(localStorage.getItem('secTestamentIndex'))].books[Number(localStorage.getItem('secBookIndex'))].bookName + ' ' + localStorage.getItem('secSavedChap');\n      }\n\n      if (localStorage.getItem('thirdTestamentIndex') != null) {\n        this.thirdBookMenu = this.bibleService.bible[Number(localStorage.getItem('thirdTestamentIndex'))].books[Number(localStorage.getItem('thirdBookIndex'))].bookName + ' ' + localStorage.getItem('thirdSavedChap');\n      }\n    }\n\n    rearrangeBooks(book) {\n      this.bibleService.menuHistoryBook = true;\n      this.bibleService.showChapters = false;\n      this.bibleService.displayMenu = false;\n\n      switch (book) {\n        case 'cur':\n          break;\n\n        case 'sec':\n          this.curTestamentArr = localStorage.getItem('curTestamentIndex');\n          this.curBookArr = localStorage.getItem('curBookIndex');\n          this.curChap = localStorage.getItem('curChap');\n          this.curScrollYPostion = localStorage.getItem('curScrollY');\n          this.secTestamentArr = localStorage.getItem('secTestamentIndex');\n          this.secBookArr = localStorage.getItem('secBookIndex');\n          this.secSavedChap = localStorage.getItem('secSavedChap');\n          this.secScrollY = localStorage.getItem('secScrollYSaved');\n          this.bibleService.testament = Number(this.secTestamentArr);\n          this.bibleService.bookSelected = Number(this.secBookArr);\n          localStorage.setItem('curChap', this.secSavedChap);\n          localStorage.setItem('curScrollY', this.secScrollY);\n          localStorage.setItem('secTestamentIndex', this.curTestamentArr);\n          localStorage.setItem('secBookIndex', this.curBookArr);\n          localStorage.setItem('secSavedChap', this.curChap);\n          localStorage.setItem('secScrollYSaved', this.curScrollYPostion);\n          break;\n\n        case 'third':\n          this.curTestamentArr = localStorage.getItem('curTestamentIndex');\n          this.curBookArr = localStorage.getItem('curBookIndex');\n          this.curChap = localStorage.getItem('curChap');\n          this.curScrollYPostion = localStorage.getItem('curScrollY');\n          this.secTestamentArr = localStorage.getItem('secTestamentIndex');\n          this.secBookArr = localStorage.getItem('secBookIndex');\n          this.secSavedChap = localStorage.getItem('secSavedChap');\n          this.secScrollY = localStorage.getItem('secScrollYSaved');\n          this.bibleService.testament = Number(localStorage.getItem('thirdTestamentIndex'));\n          this.bibleService.bookSelected = Number(localStorage.getItem('thirdBookIndex'));\n          localStorage.setItem('curChap', localStorage.getItem('thirdSavedChap'));\n          localStorage.setItem('curScrollY', localStorage.getItem('thirdScrollYSaved'));\n          localStorage.setItem('secTestamentIndex', this.curTestamentArr);\n          localStorage.setItem('secBookIndex', this.curBookArr);\n          localStorage.setItem('secSavedChap', this.curChap);\n          localStorage.setItem('secScrollYSaved', this.curScrollYPostion);\n          localStorage.setItem('thirdTestamentIndex', this.secTestamentArr);\n          localStorage.setItem('thirdBookIndex', this.secBookArr);\n          localStorage.setItem('thirdSavedChap', this.secSavedChap);\n          localStorage.setItem('thirdScrollYSaved', this.secScrollY);\n          break;\n      }\n\n      ;\n      this.bibleService.title = this.bibleService.bible[this.bibleService.testament].books[this.bibleService.bookSelected].bookName;\n      localStorage.setItem('curTestamentIndex', this.bibleService.testament.toString());\n      localStorage.setItem('curBookIndex', this.bibleService.bookSelected.toString()); //hack to force angular to reload with the above parameters - route to '/testament' then back\n\n      this.router.navigateByUrl('/testament', {\n        skipLocationChange: true\n      }).then(() => {\n        //Below works, however gives an error code 404 from static server (github pages) on reload if - this.router.navigate(['/book', this.bibleService.title]);  \n        this.router.navigate(['/book']);\n      });\n    }\n\n    newBook() {\n      // reset scroll position if new book selected                \n      if ((this.bibleService.title != this.bibleService.bible[Number(localStorage.getItem('curTestamentIndex'))].books[Number(localStorage.getItem('curBookIndex'))].bookName || localStorage.getItem('curChap') == null) && this.bibleService.menuHistoryBook == false) {\n        localStorage.setItem('curScrollY', '0');\n        localStorage.setItem('curChap', '1');\n        this.bibleService.showChapters = true;\n      }\n    }\n\n    savePosition() {\n      localStorage.setItem('ScrollYSaved', localStorage.getItem('curScrollY'));\n      localStorage.setItem('curSavedChap', localStorage.getItem('curChap'));\n    }\n\n    storeBooks() {\n      // only execute if not selected from history\n      if (this.bibleService.menuHistoryBook == false) {\n        this.curBookArr = localStorage.getItem('curBookIndex');\n        this.curTestamentArr = localStorage.getItem('curTestamentIndex');\n        this.secBookArr = localStorage.getItem('secBookIndex');\n        this.secTestamentArr = localStorage.getItem('secTestamentIndex');\n        this.curScrollYPostion = localStorage.getItem('ScrollYSaved');\n        this.secScrollY = localStorage.getItem('secScrollYSaved');\n        this.curSavedChap = localStorage.getItem('curSavedChap');\n        this.secSavedChap = localStorage.getItem('secSavedChap');\n\n        if (this.bibleService.bookSelected != Number(this.curBookArr) || this.bibleService.testament != Number(this.curTestamentArr)) {\n          if (this.secTestamentArr != null) {\n            localStorage.setItem('thirdTestamentIndex', this.secTestamentArr);\n            localStorage.setItem('thirdBookIndex', this.secBookArr);\n            localStorage.setItem('thirdScrollYSaved', this.secScrollY);\n            localStorage.setItem('thirdSavedChap', this.secSavedChap);\n          }\n\n          localStorage.setItem('secTestamentIndex', this.curTestamentArr);\n          localStorage.setItem('secBookIndex', this.curBookArr);\n          localStorage.setItem('secScrollYSaved', this.curScrollYPostion);\n          localStorage.setItem('secSavedChap', this.curSavedChap);\n        } // The following need to be here or history won't originally populate\n\n\n        localStorage.setItem('curTestamentIndex', this.bibleService.testament.toString());\n        localStorage.setItem('curBookIndex', this.bibleService.bookSelected.toString());\n      }\n    }\n\n  }\n\n  HistoryService.ɵfac = function HistoryService_Factory(t) {\n    return new (t || HistoryService)(i0.ɵɵinject(i1.BibleService), i0.ɵɵinject(i2.Router));\n  };\n\n  HistoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HistoryService,\n    factory: HistoryService.ɵfac,\n    providedIn: 'root'\n  });\n  return HistoryService;\n})();","map":null,"metadata":{},"sourceType":"module"}